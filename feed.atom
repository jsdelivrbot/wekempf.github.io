<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
	<link rel="self" href="http://digitaltapestry.net/" />
	<id>http://digitaltapestry.net/</id>
	<title>Digital Tapestry</title>
	<rights>2017</rights>
	<updated>2017-01-16T19:58:18Z</updated>
	<subtitle>Weaving a Digital Tapestry</subtitle>
	<entry>
		<link href="http://digitaltapestry.net/posts/playing-with-equality" />
		<link rel="enclosure" type="image" href="http://digitaltapestry.net/assets/images/banner_web.jpg" />
		<id>http://digitaltapestry.net/posts/playing-with-equality</id>
		<title>Playing With Equality</title>
		<updated>2017-01-14T13:10:36Z</updated>
		<content>&lt;h1 id="playing-with-equality"&gt;Playing With Equality&lt;/h1&gt;
&lt;p&gt;Most developers think they understand equality, but it's actually a pretty tricky subject.
Implementing equality correctly is much more complicated than most realize. In this post
I'm going to play around with equality, showing you some things you may not be aware of,
and eventually show you an interesting trick you can use when implementing equality.&lt;/p&gt;
&lt;h2 id="value-equality"&gt;Value Equality&lt;/h2&gt;
&lt;p&gt;Did you know that in .NET you get value equality for free? Value types automatically
implement &lt;code&gt;object.Equals&lt;/code&gt; and &lt;code&gt;object.GetHashCode&lt;/code&gt; to “do the right thing”.
Here's a simple &lt;code&gt;Point&lt;/code&gt; struct.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;public struct Point
{
    public int X { get; set; }

    public int Y { get; set; }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And here's some simple code to illustrate the equality behavior you get for free.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;var p1 = new Point { X = 10, Y = 20 };
var p2 = new Point { X = 10, Y = 30 };
var p3 = new Point { X = 10, Y = 20 };

WriteLine(p1.Equals(p1));
WriteLine(p1.Equals(p2));
WriteLine(p1.Equals(p3));
WriteLine(p1.GetHashCode());
WriteLine(p2.GetHashCode());
WriteLine(p3.GetHashCode());
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This produces the following results.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-text"&gt;True
False
True
346948930
346948936
346948930
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So &lt;code&gt;object.Equals&lt;/code&gt; behaves as you'd expect, as does &lt;code&gt;object.GetHashCode&lt;/code&gt;. What you
don't get is &lt;code&gt;IEquatable&amp;lt;Point&amp;gt;&lt;/code&gt;, unfortunately, but for value types that's fairly
easy to implement.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;public struct Point : IEquatable&amp;lt;Point&amp;gt;
{
    public int X { get; set; }

    public int Y { get; set; }

        public bool Equals(Point other) =&amp;gt; object.Equals(this, other);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="reference-equality"&gt;Reference Equality&lt;/h2&gt;
&lt;p&gt;It's not so simple for reference types. Reference types don't provide value equality,
they provide reference equality. Let's illustrate.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;public class RefPoint
{
    public int X { get; set; }

    public int Y { get; set; }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This is identical to our original &lt;code&gt;Point&lt;/code&gt;, except it's a class instead of a struct.
Let's use it like we did the struct.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;var p4 = new RefPoint { X = 10, Y = 20 };
var p5 = new RefPoint { X = 10, Y = 30 };
var p6 = new RefPoint { X = 10, Y = 20 };

WriteLine(p4.Equals(p4));
WriteLine(p4.Equals(p5));
WriteLine(p4.Equals(p6));
WriteLine(p4.GetHashCode());
WriteLine(p5.GetHashCode());
WriteLine(p6.GetHashCode());
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here's the result.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-text"&gt;True
False
False
21083178
55530882
30015890
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So, every instance has it's own unique hash code and an instance is only equal to itself.
This is reference equality. We can override the behavior to get back value equality, but
it's non-trivial.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;public class RefPoint : IEquatable&amp;lt;RefPoint&amp;gt;
{
    public int X { get; set; }

    public int Y { get; set; }

    public override bool Equals(object obj) =&amp;gt; this.Equals(obj as RefPoint);

    public override int GetHashCode() =&amp;gt;
        (this.X.GetHashCode() * 486187739) + this.Y.GetHashCode();

    public bool Equals(RefPoint other) =&amp;gt;
        other == null
            ? false
            : this.X == other.X &amp;amp;&amp;amp; this.Y == other.Y;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Handling &lt;code&gt;null&lt;/code&gt; is a bit tricky, but most of us should be able to handle that corectly if
we're careful. &lt;code&gt;GetHashCode&lt;/code&gt; is another matter. Not many people know how to implement a good
hashing algorithm. With some web searching you can come across the basic algorithm I've used
here: you multiply each “part” (each field/property) except the last by some large prime
number and add all of the results together. You could memorize this, but it's still a lot
of fiddly code to have to write for such an "easy" concept as equality.&lt;/p&gt;
&lt;h2 id="valuetuple-trick"&gt;ValueTuple trick&lt;/h2&gt;
&lt;p&gt;I promised a trick. Well, we know that value types implement equality by default. There's
a trick you can take advantage of when implementing equality for reference types.&lt;/p&gt;
&lt;p&gt;In C# 7 they've introduced tuples into the language. Under the cover these tuples are
instances of a new type: &lt;code&gt;ValueTuple&lt;/code&gt;. This type is, as it's name implies, a value type.
Since value types implement &lt;code&gt;object.Equals&lt;/code&gt; and &lt;code&gt;object.GetHashCode&lt;/code&gt;, we can take
advantage of that when implementing them for reference types.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;public class RefPoint : IEquatable&amp;lt;RefPoint&amp;gt;
{
    public int X { get; set; }

    public int Y { get; set; }

    public override bool Equals(object obj) =&amp;gt; this.Equals(obj as RefPoint);

    public override int GetHashCode() =&amp;gt;
        this.AsTuple().GetHashCode();

    public bool Equals(RefPoint other) =&amp;gt;
        other == null
            ? false
            : this.AsTuple().Equals(other.AsTuple());

    private (int X, int Y) AsTuple() =&amp;gt; (this.X, this.Y);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We stil have to handle &lt;code&gt;null&lt;/code&gt;, unfortunately, but the rest has become much easier.
BTW, in older versions of C# you can do the same thing with an anonymous type
or a custom value type, but neither is as nice as the &lt;code&gt;ValueTuple&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id="wishful-thinking"&gt;Wishful Thinking&lt;/h2&gt;
&lt;p&gt;The Ruby language has this nice little concept of the “spaceship operator”. The
&lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; operator is basically equivelent to &lt;code&gt;IComparable.Compare&lt;/code&gt;, returning a
negative value if the left value is less than the right value, a positive value
if the left value is greater than the right value and zero if the left value is
equal to the right value. The real beauty here is if you define this one operator,
everything else is defined for you. Wouldn't it be awesome if we had the same
concept in C#? In C# we split &lt;code&gt;IEquatable&lt;/code&gt; and &lt;code&gt;IComparable&lt;/code&gt; concepts up, rightfully,
so we might need two operators. I'll call them &lt;code&gt;===&lt;/code&gt; and &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt;. If you defined
&lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; you'd get &lt;code&gt;IEqutable&lt;/code&gt;, &lt;code&gt;IComparable&lt;/code&gt;, &lt;code&gt;object.Equals&lt;/code&gt;, &lt;code&gt;object.GetHashCode&lt;/code&gt;,
&lt;code&gt;==&lt;/code&gt;, &lt;code&gt;!=&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;gt;=&lt;/code&gt; all implemented for you by the compiler.
If you implemented &lt;code&gt;===&lt;/code&gt; instead you'd get &lt;code&gt;IEquatable&lt;/code&gt;, &lt;code&gt;object.Equals&lt;/code&gt;,
&lt;code&gt;object.GetHashCode&lt;/code&gt;, &lt;code&gt;==&lt;/code&gt; and &lt;code&gt;!=&lt;/code&gt;. Oh, and as long as we're wishing,
let's make it really simple to implement these two operators.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;public class RefPoint
{
    public int X { get; set; }

    public int Y { get; set; }

    public operator ===() =&amp;gt; this.X, this.Y;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In the above example we implemented this hypothetical operator not by declaring
how to compare but by only declaring what to compare. This allows the definition
to automatically implement everything else for us, basically giving us code equivalent
to what I showed for the &lt;code&gt;ValueTuple&lt;/code&gt; trick (plus the operators).&lt;/p&gt;
&lt;p&gt;Yeah, I'm not entirely sold on the syntax here either. After all, there's no &lt;code&gt;===&lt;/code&gt; or
&lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; operators you can use anywhere other than in declaring things here. Maybe it would
make more sense with syntax like this.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;public class RefPoint
    equatable : X, Y
{
    public int X { get; set; }

    public int Y { get; set; }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Still, the idea of no longer having to deal with the intricacies of implementing equality
(or ordering) by hand, the source of far too many bugs, is enticing, isn't it?&lt;/p&gt;


&lt;div id="disqus_thread"&gt;&lt;/div&gt;
&lt;script type="text/javascript"&gt;
    /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
    var disqus_shortname = 'digitaltapestry'; // required: replace example with your forum shortname
    var disqus_identifier = 'playing-with-equality';
    var disqus_title = 'Playing With Equality';
    var disqus_url = 'http://digitaltapestry.net/posts/playing-with-equality';

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
    
    (function () {
        var s = document.createElement('script'); s.async = true;
        s.type = 'text/javascript';
        s.src = '//' + disqus_shortname + '.disqus.com/count.js';
        (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
    }());
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href="http://disqus.com/?ref_noscript"&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
&lt;a href="http://disqus.com" class="dsq-brlink"&gt;comments powered by &lt;span class="logo-disqus"&gt;Disqus&lt;/span&gt;&lt;/a&gt;</content>
		<summary>&lt;p&gt;Most developers think they understand equality, but it's actually a pretty tricky subject.
Implementing equality correctly is much more complicated than most realize. In this post
I'm going to play around with equality, showing you some things you may not be aware of,
and eventually show you an interesting trick you can use when implementing equality.&lt;/p&gt;</summary>
	</entry>
	<entry>
		<link href="http://digitaltapestry.net/posts/emoji-cheat-sheet" />
		<link rel="enclosure" type="image" href="http://digitaltapestry.net/assets/images/banner_web.jpg" />
		<id>http://digitaltapestry.net/posts/emoji-cheat-sheet</id>
		<title>Emoji Cheat Sheet</title>
		<updated>2017-01-12T11:02:00Z</updated>
		<content>&lt;h1 id="emoji-cheat-sheet"&gt;Emoji Cheat Sheet&lt;/h1&gt;
&lt;p&gt;This cheat sheet was compiled from the &lt;a href="https://github.com/lunet-io/markdig/blob/master/src/Markdig/Extensions/Emoji/EmojiParser.cs"&gt;source for Markdig&lt;/a&gt;.
A couple of shortcuts use the &lt;code&gt;\&lt;/code&gt; character, which doesn't always work well with the rest of Markdown, and may require a trailing space.
One shortcut, &lt;code&gt;&amp;lt;/3&lt;/code&gt;, breaks my Markdown pipetable in the source and I had to use the alternate &lt;code&gt;:broken_heart:&lt;/code&gt; shortcut
for the visual display here. This shortcut works in other places, but interfered with the pipetable here, which I cannot explain.&lt;/p&gt;
&lt;table class="table"&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Shortcut&lt;/th&gt;
&lt;th&gt;Result&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:100:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💯&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:1234:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🔢&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:smile:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😄&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:smiley:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😃&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:grinning:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😀&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:blush:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😊&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:relaxed:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;☺️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:wink:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😉&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:heart_eyes:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😍&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:kissing_heart:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😘&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:kissing_closed_eyes:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😚&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:kissing:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😗&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:kissing_smiling_eyes:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😙&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:stuck_out_tongue_winking_eye:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😜&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:stuck_out_tongue_closed_eyes:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😝&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:stuck_out_tongue:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😛&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:flushed:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😳&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:grin:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😁&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:pensive:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😔&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:relieved:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😌&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:unamused:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😒&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:disappointed:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😞&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:persevere:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😣&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:joy:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😂&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:cry:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😢&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:sob:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😭&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:sleepy:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😪&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:disappointed_relieved:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😥&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:cold_sweat:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😰&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:sweat_smile:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:sweat:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:weary:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😩&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:tired_face:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😫&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:fearful:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😨&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:scream:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😱&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:angry:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😠&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:rage:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😡&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:triumph:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😤&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:confounded:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😖&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:laughing:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😆&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:satisfied:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😆&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:yum:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😋&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:mask:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😷&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:sunglasses:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😎&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:sleeping:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😴&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:dizzy_face:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😵&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:astonished:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😲&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:worried:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😟&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:frowning:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😦&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:anguished:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😧&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:smiling_imp:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😈&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:imp:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👿&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:open_mouth:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😮&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:grimacing:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😬&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:neutral_face:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:confused:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😕&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:hushed:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😯&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:no_mouth:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😶&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:innocent:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😇&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:smirk:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😏&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:expressionless:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😑&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:man_with_gua_pi_mao:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👲&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:man_with_turban:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👳&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:cop:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👮&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:construction_worker:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👷&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:guardsman:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💂&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:baby:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👶&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:boy:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👦&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:girl:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👧&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:man:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👨&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:woman:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👩&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:older_man:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👴&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:older_woman:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👵&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:person_with_blond_hair:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👱&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:angel:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👼&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:princess:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👸&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:smiley_cat:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😺&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:smile_cat:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😸&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:heart_eyes_cat:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😻&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:kissing_cat:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😽&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:smirk_cat:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😼&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:scream_cat:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🙀&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:crying_cat_face:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😿&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:joy_cat:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😹&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:pouting_cat:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😾&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:japanese_ogre:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👹&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:japanese_goblin:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👺&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:see_no_evil:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🙈&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:hear_no_evil:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🙉&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:speak_no_evil:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🙊&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:skull:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💀&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:alien:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👽&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:hankey:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💩&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:poop:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💩&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:shit:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💩&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:fire:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🔥&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:sparkles:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;✨&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:star2:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🌟&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:dizzy:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💫&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:boom:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💥&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:collision:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💥&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:anger:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💢&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:sweat_drops:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💦&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:droplet:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💧&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:zzz:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💤&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:dash:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💨&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:ear:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👂&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:eyes:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👀&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:nose:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👃&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:tongue:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:lips:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👄&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:+1:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👍&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:thumbsup:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👍&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:-1:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👎&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:thumbsdown:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👎&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:ok_hand:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👌&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:facepunch:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👊&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:punch:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👊&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:fist:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;✊&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:v:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;✌️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:wave:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👋&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:hand:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;✋&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:raised_hand:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;✋&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:open_hands:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:point_up_2:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👆&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:point_down:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👇&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:point_right:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👉&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:point_left:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👈&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:raised_hands:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🙌&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:pray:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🙏&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:point_up:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;☝️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:clap:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👏&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:muscle:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💪&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:walking:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🚶&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:runner:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🏃&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:running:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🏃&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:dancer:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💃&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:couple:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👫&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:family:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👪&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:two_men_holding_hands:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👬&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:two_women_holding_hands:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👭&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:couplekiss:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💏&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:couple_with_heart:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💑&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:dancers:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👯&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:ok_woman:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🙆&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:no_good:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🙅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:information_desk_person:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💁&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:raising_hand:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🙋&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:massage:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💆&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:haircut:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💇&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:nail_care:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:bride_with_veil:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👰&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:person_with_pouting_face:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🙎&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:person_frowning:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🙍&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:bow:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🙇&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:tophat:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🎩&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:crown:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👑&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:womans_hat:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👒&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:athletic_shoe:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👟&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:mans_shoe:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👞&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:shoe:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👞&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:sandal:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👡&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:high_heel:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👠&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:boot:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👢&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:shirt:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👕&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:tshirt:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👕&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:necktie:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👔&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:womans_clothes:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👚&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:dress:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👗&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:running_shirt_with_sash:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🎽&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:jeans:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👖&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:kimono:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👘&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:bikini:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👙&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:briefcase:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💼&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:handbag:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👜&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:pouch:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👝&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:purse:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👛&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:eyeglasses:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:ribbon:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🎀&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:closed_umbrella:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🌂&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:lipstick:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💄&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:yellow_heart:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💛&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:blue_heart:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💙&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:purple_heart:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💜&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:green_heart:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💚&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:heart:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;❤️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:broken_heart:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💔&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:heartpulse:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💗&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:heartbeat:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:two_hearts:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💕&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:sparkling_heart:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💖&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:revolving_hearts:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💞&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:cupid:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💘&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:love_letter:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💌&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:kiss:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💋&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:ring:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💍&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:gem:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💎&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:bust_in_silhouette:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👤&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:busts_in_silhouette:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👥&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:speech_balloon:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💬&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:footprints:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👣&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:thought_balloon:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💭&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:dog:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🐶&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:wolf:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🐺&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:cat:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🐱&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:mouse:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🐭&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:hamster:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🐹&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:rabbit:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🐰&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:frog:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🐸&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:tiger:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🐯&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:koala:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🐨&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:bear:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🐻&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:pig:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🐷&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:pig_nose:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🐽&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:cow:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🐮&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:boar:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🐗&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:monkey_face:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🐵&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:monkey:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🐒&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:horse:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🐴&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:sheep:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🐑&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:elephant:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🐘&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:panda_face:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🐼&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:penguin:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🐧&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:bird:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🐦&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:baby_chick:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🐤&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:hatched_chick:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🐥&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:hatching_chick:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🐣&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:chicken:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🐔&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:snake:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🐍&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:turtle:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🐢&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:bug:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🐛&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:bee:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🐝&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:honeybee:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🐝&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:ant:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🐜&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:beetle:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🐞&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:snail:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🐌&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:octopus:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🐙&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:shell:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🐚&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:tropical_fish:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🐠&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:fish:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🐟&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:dolphin:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🐬&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:flipper:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🐬&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:whale:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🐳&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:whale2:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🐋&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:cow2:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🐄&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:ram:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🐏&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:rat:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🐀&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:water_buffalo:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🐃&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:tiger2:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🐅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:rabbit2:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🐇&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:dragon:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🐉&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:racehorse:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🐎&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:goat:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🐐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:rooster:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🐓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:dog2:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🐕&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:pig2:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🐖&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:mouse2:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🐁&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:ox:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🐂&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:dragon_face:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🐲&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:blowfish:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🐡&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:crocodile:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🐊&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:camel:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🐫&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:dromedary_camel:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🐪&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:leopard:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🐆&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:cat2:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🐈&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:poodle:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🐩&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:feet:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🐾&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:paw_prints:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🐾&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:bouquet:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:cherry_blossom:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🌸&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:tulip:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🌷&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:four_leaf_clover:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🍀&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:rose:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🌹&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:sunflower:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🌻&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:hibiscus:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🌺&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:maple_leaf:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🍁&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:leaves:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🍃&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:fallen_leaf:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🍂&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:herb:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🌿&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:ear_of_rice:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🌾&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:mushroom:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🍄&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:cactus:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🌵&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:palm_tree:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🌴&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:evergreen_tree:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🌲&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:deciduous_tree:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🌳&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:chestnut:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🌰&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:seedling:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🌱&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:blossom:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🌼&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:globe_with_meridians:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🌐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:sun_with_face:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🌞&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:full_moon_with_face:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🌝&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:new_moon_with_face:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🌚&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:new_moon:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🌑&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:waxing_crescent_moon:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🌒&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:first_quarter_moon:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🌓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:moon:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🌔&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:waxing_gibbous_moon:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🌔&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:full_moon:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🌕&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:waning_gibbous_moon:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🌖&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:last_quarter_moon:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🌗&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:waning_crescent_moon:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🌘&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:last_quarter_moon_with_face:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🌜&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:first_quarter_moon_with_face:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🌛&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:crescent_moon:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🌙&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:earth_africa:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🌍&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:earth_americas:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🌎&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:earth_asia:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🌏&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:volcano:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🌋&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:milky_way:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🌌&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:stars:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🌠&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:star:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;⭐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:sunny:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;☀️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:partly_sunny:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;⛅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:cloud:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;☁️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:zap:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;⚡&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:umbrella:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;☔&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:snowflake:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;❄️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:snowman:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;⛄&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:cyclone:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🌀&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:foggy:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🌁&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:rainbow:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🌈&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:ocean:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🌊&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:bamboo:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🎍&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:gift_heart:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💝&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:dolls:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🎎&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:school_satchel:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🎒&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:mortar_board:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🎓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:flags:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🎏&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:fireworks:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🎆&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:sparkler:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🎇&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:wind_chime:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🎐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:rice_scene:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🎑&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:jack_o_lantern:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🎃&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:ghost:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👻&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:santa:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🎅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:christmas_tree:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🎄&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:gift:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🎁&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:tanabata_tree:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🎋&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:tada:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🎉&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:confetti_ball:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🎊&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:balloon:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🎈&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:crossed_flags:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🎌&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:crystal_ball:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🔮&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:movie_camera:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🎥&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:camera:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;📷&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:video_camera:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;📹&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:vhs:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;📼&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:cd:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💿&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:dvd:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;📀&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:minidisc:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💽&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:floppy_disk:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💾&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:computer:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💻&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:iphone:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;📱&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:phone:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;☎️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:telephone:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;☎️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:telephone_receiver:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;📞&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:pager:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;📟&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:fax:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;📠&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:satellite:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;📡&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:tv:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;📺&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:radio:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;📻&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:loud_sound:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🔊&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:sound:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🔉&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:speaker:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🔈&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:mute:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🔇&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:bell:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🔔&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:no_bell:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🔕&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:loudspeaker:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;📢&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:mega:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;📣&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:hourglass_flowing_sand:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;⏳&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:hourglass:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;⌛&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:alarm_clock:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;⏰&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:watch:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;⌚&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:unlock:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🔓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:lock:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🔒&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:lock_with_ink_pen:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🔏&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:closed_lock_with_key:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🔐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:key:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🔑&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:mag_right:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🔎&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:bulb:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💡&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:flashlight:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🔦&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:high_brightness:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🔆&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:low_brightness:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🔅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:electric_plug:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🔌&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:battery:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🔋&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:mag:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🔍&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:bathtub:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🛁&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:bath:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🛀&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:shower:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🚿&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:toilet:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🚽&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:wrench:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🔧&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:nut_and_bolt:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🔩&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:hammer:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🔨&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:door:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🚪&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:smoking:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🚬&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:bomb:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💣&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:gun:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🔫&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:hocho:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🔪&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:knife:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🔪&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:pill:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💊&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:syringe:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💉&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:moneybag:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💰&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:yen:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💴&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:dollar:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💵&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:pound:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💷&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:euro:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💶&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:credit_card:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💳&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:money_with_wings:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💸&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:calling:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;📲&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:e-&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;:e-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:inbox_tray:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;📥&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:outbox_tray:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;📤&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:email:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;✉️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:envelope:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;✉️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:envelope_with_arrow:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;📩&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:incoming_envelope:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;📨&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:postal_horn:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;📯&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:mailbox:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;📫&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:mailbox_closed:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;📪&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:mailbox_with_mail:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;📬&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:mailbox_with_no_mail:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;📭&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:postbox:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;📮&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:package:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;📦&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:memo:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;📝&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:pencil:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;📝&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:page_facing_up:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;📄&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:page_with_curl:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;📃&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:bookmark_tabs:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;📑&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:bar_chart:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;📊&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:chart_with_upwards_trend:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;📈&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:chart_with_downwards_trend:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;📉&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:scroll:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;📜&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:clipboard:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;📋&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:date:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;📅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:calendar:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;📆&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:card_index:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;📇&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:file_folder:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;📁&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:open_file_folder:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;📂&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:scissors:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;✂️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:pushpin:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;📌&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:paperclip:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;📎&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:black_nib:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;✒️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:pencil2:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;✏️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:straight_ruler:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;📏&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:triangular_ruler:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;📐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:closed_book:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;📕&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:green_book:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;📗&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:blue_book:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;📘&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:orange_book:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;📙&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:notebook:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;📓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:notebook_with_decorative_cover:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;📔&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:ledger:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;📒&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:books:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;📚&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:book:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;📖&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:open_book:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;📖&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:bookmark:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🔖&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:name_badge:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;📛&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:microscope:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🔬&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:telescope:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🔭&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:newspaper:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;📰&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:art:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🎨&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:clapper:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🎬&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:microphone:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🎤&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:headphones:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🎧&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:musical_score:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🎼&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:musical_note:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🎵&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:notes:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🎶&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:musical_keyboard:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🎹&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:violin:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🎻&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:trumpet:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🎺&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:saxophone:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🎷&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:guitar:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🎸&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:space_invader:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👾&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:video_game:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🎮&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:black_joker:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🃏&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:flower_playing_cards:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🎴&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:mahjong:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🀄&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:game_die:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🎲&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:dart:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🎯&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:football:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🏈&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:basketball:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🏀&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:soccer:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;⚽&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:baseball:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;⚾️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:tennis:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🎾&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:8ball:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🎱&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:rugby_football:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🏉&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:bowling:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🎳&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:golf:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;⛳&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:mountain_bicyclist:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🚵&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:bicyclist:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🚴&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:checkered_flag:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🏁&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:horse_racing:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🏇&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:trophy:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🏆&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:ski:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🎿&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:snowboarder:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🏂&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:swimmer:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🏊&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:surfer:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🏄&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:fishing_pole_and_fish:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🎣&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:coffee:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;☕&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:tea:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🍵&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:sake:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🍶&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:baby_bottle:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🍼&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:beer:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🍺&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:beers:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🍻&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:cocktail:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🍸&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:tropical_drink:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🍹&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:wine_glass:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🍷&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:fork_and_knife:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🍴&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:pizza:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🍕&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:hamburger:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🍔&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:fries:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🍟&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:poultry_leg:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🍗&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:meat_on_bone:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🍖&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:spaghetti:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🍝&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:curry:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🍛&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:fried_shrimp:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🍤&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:bento:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🍱&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:sushi:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🍣&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:fish_cake:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🍥&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:rice_ball:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🍙&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:rice_cracker:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🍘&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:rice:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🍚&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:ramen:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🍜&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:stew:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🍲&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:oden:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🍢&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:dango:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🍡&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:egg:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🍳&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:bread:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🍞&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:doughnut:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🍩&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:custard:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🍮&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:icecream:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🍦&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:ice_cream:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🍨&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:shaved_ice:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🍧&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:birthday:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🎂&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:cake:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🍰&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:cookie:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🍪&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:chocolate_bar:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🍫&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:candy:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🍬&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:lollipop:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🍭&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:honey_pot:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🍯&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:apple:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🍎&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:green_apple:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🍏&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:tangerine:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🍊&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:lemon:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🍋&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:cherries:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🍒&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:grapes:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🍇&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:watermelon:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🍉&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:strawberry:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🍓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:peach:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🍑&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:melon:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🍈&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:banana:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🍌&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:pear:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🍐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:pineapple:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🍍&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:sweet_potato:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🍠&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:eggplant:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🍆&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:tomato:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🍅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:corn:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🌽&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:house:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🏠&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:house_with_garden:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🏡&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:school:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🏫&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:office:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🏢&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:post_office:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🏣&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:hospital:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🏥&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:bank:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🏦&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:convenience_store:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🏪&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:love_hotel:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🏩&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:hotel:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🏨&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:wedding:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💒&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:church:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;⛪&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:department_store:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🏬&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:european_post_office:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🏤&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:city_sunrise:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🌇&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:city_sunset:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🌆&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:japanese_castle:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🏯&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:european_castle:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🏰&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:tent:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;⛺&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:factory:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🏭&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:tokyo_tower:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🗼&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:japan:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🗾&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:mount_fuji:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🗻&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:sunrise_over_mountains:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🌄&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:sunrise:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🌅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:night_with_stars:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🌃&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:statue_of_liberty:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🗽&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:bridge_at_night:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🌉&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:carousel_horse:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🎠&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:ferris_wheel:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🎡&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:fountain:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;⛲&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:roller_coaster:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🎢&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:ship:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🚢&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:boat:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;⛵&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:sailboat:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;⛵&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:speedboat:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🚤&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:rowboat:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🚣&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:anchor:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;⚓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:rocket:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🚀&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:airplane:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;✈️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:seat:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💺&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:helicopter:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🚁&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:steam_locomotive:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🚂&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:tram:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🚊&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:station:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🚉&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:mountain_railway:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🚞&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:train2:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🚆&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:bullettrain_side:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🚄&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:bullettrain_front:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🚅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:light_rail:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🚈&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:metro:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🚇&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:monorail:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🚝&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:train:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🚋&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:railway_car:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🚃&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:trolleybus:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🚎&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:bus:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🚌&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:oncoming_bus:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🚍&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:blue_car:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🚙&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:oncoming_automobile:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🚘&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:car:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🚗&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:red_car:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🚗&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:taxi:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🚕&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:oncoming_taxi:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🚖&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:articulated_lorry:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🚛&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:truck:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🚚&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:rotating_light:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🚨&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:police_car:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🚓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:oncoming_police_car:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🚔&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:fire_engine:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🚒&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:ambulance:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🚑&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:minibus:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🚐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:bike:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🚲&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:aerial_tramway:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🚡&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:suspension_railway:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🚟&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:mountain_cableway:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🚠&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:tractor:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🚜&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:barber:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💈&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:busstop:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🚏&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:ticket:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🎫&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:vertical_traffic_light:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🚦&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:traffic_light:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🚥&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:warning:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;⚠️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:construction:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🚧&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:beginner:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🔰&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:fuelpump:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;⛽&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:izakaya_lantern:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🏮&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:lantern:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🏮&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:slot_machine:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🎰&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:hotsprings:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;♨️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:moyai:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🗿&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:circus_tent:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🎪&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:performing_arts:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🎭&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:round_pushpin:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;📍&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:triangular_flag_on_post:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🚩&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:jp:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🇯🇵&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:kr:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🇰🇷&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:de:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🇩🇪&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:cn:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🇨🇳&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:us:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🇺🇸&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:fr:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🇫🇷&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:es:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🇪🇸&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:it:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🇮🇹&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:ru:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🇷🇺&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:gb:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🇬🇧&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:uk:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🇬🇧&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:one:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;1️⃣&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:two:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;2️⃣&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:three:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;3️⃣&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:four:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;4️⃣&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:five:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;5️⃣&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:six:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;6️⃣&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:seven:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;7️⃣&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:eight:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;8️⃣&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:nine:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;9️⃣&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:zero:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;0️⃣&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:keycap_ten:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🔟&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:hash:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;#️⃣&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:symbols:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🔣&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:arrow_up:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;⬆️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:arrow_down:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;⬇️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:arrow_left:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;⬅️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:arrow_right:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;➡️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:capital_abcd:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🔠&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:abcd:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🔡&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:abc:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🔤&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:arrow_upper_right:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;↗️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:arrow_upper_left:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;↖️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:arrow_lower_right:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;↘️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:arrow_lower_left:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;↙️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:left_right_arrow:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;↔️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:arrow_up_down:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;↕️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:arrows_counterclockwise:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🔄&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:arrow_backward:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;◀️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:arrow_forward:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;▶️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:arrow_up_small:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🔼&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:arrow_down_small:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🔽&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:leftwards_arrow_with_hook:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;↩️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:arrow_right_hook:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;↪️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:information_source:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ℹ️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:rewind:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;⏪&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:fast_forward:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;⏩&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:arrow_double_up:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;⏫&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:arrow_double_down:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;⏬&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:arrow_heading_down:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;⤵️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:arrow_heading_up:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;⤴️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:ok:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🆗&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:twisted_rightwards_arrows:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🔀&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:repeat:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🔁&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:repeat_one:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🔂&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:new:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🆕&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:up:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🆙&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:cool:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🆒&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:free:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🆓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:ng:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🆖&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:signal_strength:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;📶&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:cinema:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🎦&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:koko:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🈁&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:u6307:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🈯&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:u7a7a:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🈳&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:u6e80:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🈵&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:u5408:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🈴&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:u7981:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🈲&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:ideograph_advantage:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🉐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:u5272:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🈹&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:u55b6:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🈺&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:u6709:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🈶&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:u7121:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🈚&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:restroom:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🚻&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:mens:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🚹&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:womens:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🚺&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:baby_symbol:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🚼&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:wc:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🚾&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:potable_water:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🚰&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:put_litter_in_its_place:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🚮&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:parking:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🅿️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:wheelchair:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;♿&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:no_smoking:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🚭&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:u6708:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🈷️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:u7533:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🈸&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:sa:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🈂️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:m:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Ⓜ️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:passport_control:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🛂&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:baggage_claim:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🛄&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:left_luggage:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🛅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:customs:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🛃&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:accept:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🉑&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:secret:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;㊙️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:congratulations:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;㊗️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:cl:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🆑&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:sos:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🆘&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:id:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🆔&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:no_entry_sign:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🚫&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:underage:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🔞&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:no_mobile_phones:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;📵&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:do_not_litter:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🚯&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:non-&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;:non-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:no_bicycles:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🚳&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:no_pedestrians:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🚷&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:children_crossing:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🚸&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:no_entry:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;⛔&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:eight_spoked_asterisk:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;✳️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:sparkle:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;❇️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:negative_squared_cross_mark:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;❎&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:white_check_mark:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;✅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:eight_pointed_black_star:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;✴️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:heart_decoration:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💟&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:vs:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🆚&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:vibration_mode:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;📳&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:mobile_phone_off:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;📴&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:a:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🅰️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:b:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🅱️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:ab:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🆎&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:o2:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🅾️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:diamond_shape_with_a_dot_inside:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💠&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:loop:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;➿&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:recycle:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;♻️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:aries:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;♈&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:taurus:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;♉&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:gemini:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;♊&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:cancer:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;♋&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:leo:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;♌&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:virgo:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;♍&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:libra:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;♎&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:scorpius:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;♏&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:sagittarius:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;♐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:capricorn:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;♑&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:aquarius:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;♒&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:pisces:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;♓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:ophiuchus:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;⛎&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:six_pointed_star:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🔯&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:atm:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🏧&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:chart:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💹&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:heavy_dollar_sign:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💲&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:currency_exchange:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💱&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:copyright:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;©️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:registered:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;®️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:tm:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;™️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:x:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;❌&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:bangbang:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;‼️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:interrobang:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;⁉️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:exclamation:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;❗&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:heavy_exclamation_mark:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;❗&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:question:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;❓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:grey_exclamation:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;❕&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:grey_question:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;❔&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:o:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;⭕&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:top:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🔝&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:end:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🔚&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:back:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🔙&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:on:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🔛&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:soon:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🔜&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:arrows_clockwise:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🔃&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:clock12:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🕛&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:clock1230:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🕧&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:clock1:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🕐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:clock130:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🕜&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:clock2:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🕑&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:clock230:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🕝&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:clock3:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🕒&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:clock330:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🕞&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:clock4:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🕓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:clock430:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🕟&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:clock5:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🕔&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:clock530:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🕠&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:clock6:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🕕&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:clock7:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🕖&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:clock8:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🕗&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:clock9:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🕘&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:clock10:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🕙&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:clock11:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🕚&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:clock630:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🕡&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:clock730:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🕢&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:clock830:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🕣&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:clock930:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🕤&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:clock1030:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🕥&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:clock1130:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🕦&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:heavy_multiplication_x:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;✖️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:heavy_plus_sign:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;➕&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:heavy_minus_sign:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;➖&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:heavy_division_sign:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;➗&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:spades:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;♠️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:hearts:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;♥️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:clubs:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;♣️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:diamonds:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;♦️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:white_flower:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💮&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:heavy_check_mark:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;✔️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:ballot_box_with_check:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;☑️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:radio_button:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🔘&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:link:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🔗&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:curly_loop:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;➰&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:wavy_dash:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;〰️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:part_alternation_mark:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;〽️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:trident:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🔱&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:black_medium_square:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;◼️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:white_medium_square:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;◻️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:black_medium_small_square:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;◾&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:white_medium_small_square:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;◽&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:black_small_square:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;▪️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:white_small_square:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;▫️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:small_red_triangle:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🔺&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:black_square_button:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🔲&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:white_square_button:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🔳&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:black_circle:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;⚫&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:white_circle:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;⚪&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:red_circle:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🔴&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:large_blue_circle:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🔵&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:small_red_triangle_down:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🔻&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:white_large_square:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;⬜&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:black_large_square:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;⬛&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:large_orange_diamond:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🔶&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:large_blue_diamond:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🔷&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:small_orange_diamond:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🔸&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:small_blue_diamond:&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;🔹&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;gt;:(&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😠&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;gt;:-(&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😠&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:\&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;:\&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:-\&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;:-\&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;/3&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;💔&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;\\3&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&amp;lt;\3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:/&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😕&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:-/&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😕&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:'(&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😢&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:'-(&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😢&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:,(&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😢&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:,-(&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😢&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:(&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😦&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:-(&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😦&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;3&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;❤️&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;]:(&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👿&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;]:-(&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;👿&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;o:)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😇&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;O:)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😇&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;o:-)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😇&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;O:-)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😇&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;0:)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😇&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;0:-)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😇&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:')&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😂&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:'-)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😂&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:,)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😂&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:,-)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😂&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:'D&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😂&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:'-D&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😂&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:,D&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😂&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:,-D&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😂&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:*&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😗&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:-*&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😗&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;x-)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😆&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;X-)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😆&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:|&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:-|&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:o&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😮&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:-o&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😮&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:O&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😮&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:-O&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😮&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:@&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😡&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:-@&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😡&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:D&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😄&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:-D&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😄&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😃&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:-)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😃&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;]:)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😈&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;]:-)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😈&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:,'(&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😭&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:,'-(&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😭&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;;(&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😭&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;;-(&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😭&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:P&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😛&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:-P&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😛&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;8-)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😎&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;B-)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😎&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:s&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😒&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:-S&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😒&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:z&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😒&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:-Z&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😒&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:$&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😒&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:-$&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😒&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;;)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😉&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;;-)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;😉&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;


&lt;div id="disqus_thread"&gt;&lt;/div&gt;
&lt;script type="text/javascript"&gt;
    /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
    var disqus_shortname = 'digitaltapestry'; // required: replace example with your forum shortname
    var disqus_identifier = 'emoji-cheat-sheet';
    var disqus_title = 'Emoji Cheat Sheet';
    var disqus_url = 'http://digitaltapestry.net/posts/emoji-cheat-sheet';

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
    
    (function () {
        var s = document.createElement('script'); s.async = true;
        s.type = 'text/javascript';
        s.src = '//' + disqus_shortname + '.disqus.com/count.js';
        (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
    }());
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href="http://disqus.com/?ref_noscript"&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
&lt;a href="http://disqus.com" class="dsq-brlink"&gt;comments powered by &lt;span class="logo-disqus"&gt;Disqus&lt;/span&gt;&lt;/a&gt;</content>
		<summary>&lt;p&gt;This cheat sheet was compiled from the &lt;a href="https://github.com/lunet-io/markdig/blob/master/src/Markdig/Extensions/Emoji/EmojiParser.cs"&gt;source for Markdig&lt;/a&gt;.
A couple of shortcuts use the &lt;code&gt;\&lt;/code&gt; character, which doesn't always work well with the rest of Markdown, and may require a trailing space.
One shortcut, &lt;code&gt;&amp;lt;/3&lt;/code&gt;, breaks my Markdown pipetable in the source and I had to use the alternate &lt;code&gt;:broken_heart:&lt;/code&gt; shortcut
for the visual display here. This shortcut works in other places, but interfered with the pipetable here, which I cannot explain.&lt;/p&gt;</summary>
	</entry>
	<entry>
		<link href="http://digitaltapestry.net/posts/wyam-anchors-and-code-copy" />
		<link rel="enclosure" type="image" href="http://digitaltapestry.net/assets/images/banner_web.jpg" />
		<id>http://digitaltapestry.net/posts/wyam-anchors-and-code-copy</id>
		<title>Wyam Anchors and Code Copy</title>
		<updated>2017-01-11T07:34:28Z</updated>
		<content>&lt;h1 id="wyam-anchors-and-code-copy"&gt;Wyam Anchors and Code Copy&lt;/h1&gt;
&lt;p&gt;On the &lt;a href="https://wyam.io"&gt;Wyam&lt;/a&gt; &lt;a href="https://gitter.im/Wyamio/Wyam"&gt;Gitter&lt;/a&gt; discussion Gary Ewan Park (@gep13 &lt;a id="fnref:1" href="#fn:1" class="footnote-ref"&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;)
asked the following:&lt;/p&gt;
&lt;blockquote class="blockquote"&gt;
&lt;p&gt;If you look at a GitHub wiki page, say this one…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class="blockquote"&gt;
&lt;p&gt;when you hover over the headers, you get this:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class="blockquote"&gt;
&lt;p&gt;&lt;img src="https://files.gitter.im/Wyamio/Wyam/ZknP/blob" class="img-fluid" alt="Anchor Button" title="Anchor Button"&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class="blockquote"&gt;
&lt;p&gt;which allows you to click the link to the header. Markdig is already generating the link to the header, but is there an easy way to
add the showing of the link on hover, and to allow copying from the address bar?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Dave Glick (@daveglick &lt;a id="fnref:3" href="#fn:2" class="footnote-ref"&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;), the author of Wyam, responded with:&lt;/p&gt;
&lt;blockquote class="blockquote"&gt;
&lt;p&gt;There is - in fact strongly considering adding this and code block copy buttons to the themes (it's all frontend JS stuff) - here's
the two libraries I like the best: &lt;a href="https://github.com/bryanbraun/anchorjs"&gt;https://github.com/bryanbraun/anchorjs&lt;/a&gt; (for anchor links)
and &lt;a href="https://github.com/zenorocha/clipboard.js"&gt;https://github.com/zenorocha/clipboard.js&lt;/a&gt; (for clipboard copying)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class="blockquote"&gt;
&lt;p&gt;Adding them to your own site would just be a matter of putting the appropriate JS in the _Scripts.cshtml file&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So, the three of us set off independently to see if we could figure out how to get these working. @daveglick &lt;a id="fnref:4" href="#fn:2" class="footnote-ref"&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt; intends to add
support for this to the existing themes, I believe, so most of what I write here won't be relevant to anyone in the future,
but I'm going to go ahead and record how I got it working for posterity. There's still some tips you can glean from what I found
when you're trying to extend an existing Wyam theme on your own.&lt;/p&gt;
&lt;h2 id="anchorjs"&gt;AnchorJS&lt;/h2&gt;
&lt;p&gt;This was the easy one. In fact, @gep13 &lt;a id="fnref:2" href="#fn:1" class="footnote-ref"&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt; and @daveglick &lt;a id="fnref:5" href="#fn:2" class="footnote-ref"&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt; had this one done before I started looking into it. Anyway,
this is strictly a JavaScript bit of magic. Here's how you can get it to work.&lt;/p&gt;
&lt;p&gt;If you don't already have a &lt;code&gt;_Scripts.cshtml&lt;/code&gt; override file created in your input folder, do so. This is a “hook” into
the theme that allows you to add your own JavaScript to every page. For AnchorJS, this is what I added.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-JavaScript"&gt;&amp;lt;script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/anchor-js/3.2.2/anchor.min.js"&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script type="text/javascript"&amp;gt;
    anchors.options.placement = 'left';
    anchors.add();
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That's it. Nothing else needs to be done. I will point out there's one impact to doing this that I don't care for. This
will add the anchor button to the &lt;code&gt;h1&lt;/code&gt; tag in the header of the page. The one inside the blog's banner. This one
serves no purpose, really, and I think it looks bad. Some CSS or JavaScript magic could probably fix this easy enough,
but I've not done that work.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; &lt;a href="http://www.phillipsj.net/posts/wyam-improved-anchors?platform=hootsuite"&gt;Jamie Philips&lt;/a&gt; provided a fix
for the anchor button in the banner issue. Here's what I'm currently using.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-JavaScript"&gt;anchors.add('#content &amp;gt; h1,h2,h3,h4');
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="clipboard.js"&gt;clipboard.js&lt;/h2&gt;
&lt;p&gt;This one was more difficult. The idea is we want a button to appear with every code block that when clicked copies
the code in that block. Since clipboard.js is really just about adding clipboard support through JavaScript, and not
explicitly about adding copy buttons to code blocks, the &lt;a href="https://clipboardjs.com/"&gt;instructions&lt;/a&gt; on the site only gets
you so far. However, that page does do exactly what we want. So, I figured I could just “steal” the code from the
page source.&lt;/p&gt;
&lt;p&gt;I used Edge to do this.&lt;/p&gt;
&lt;div class="alert alert-info"&gt;&lt;p&gt;Yeah, I'm that guy. The lone man daring to use the browser no one else will touch. I'm going to describe how &lt;strong&gt;I&lt;/strong&gt;
did this, using Edge. You'll have to figure out how to do the same thing in your browser of choice… they all
have similar capabilities.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;I right clicked on one of the code blocks and selected “Inspect Element” to get into the developer tools at
the proper location. By inspecting the HTML for this element I was able to find the CSS classes to search for.
Edge's developer tools allow you to search all the source files, including linked JavaScript and CSS files.
So, using this I was able to find both the JavaScript file(s) involved here as well as the CSS file(s).
Unfortunately for us humans, all of these files were minified, making the entirely unreadable. I figured
there must be some online tools for "unmininfying" both, so I went to Bing (don't shame me) and typed
both “format JavaScript” and "format CSS" into the search. On Bing, the top entry for both is a tool
to format the JavaScript/CSS right there in the search results. Handy to know.&lt;/p&gt;
&lt;div class="alert alert-info"&gt;&lt;p&gt;In case you're just figuring it out, I'm not exactly a web developer. I've done web development professionally,
but that was 12 years ago. Or, if you count XUL based desktop development, 10 years ago. I'm not up
on the latest web development technologies and tools.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The JavaScript was spread across a few files, so it took a while to locate everything, but it wasn't really
so bad. That site uses generic CSS class names that I'm concerned could clash, so I modified the code
slightly for my own purposes. Here's what I came up with for the JavaScript.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-JavaScript"&gt;&amp;lt;script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/clipboard.js/1.5.16/clipboard.min.js"&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script type="text/javascript"&amp;gt;
    var snippets = document.querySelectorAll("pre &amp;gt; code");
    [].forEach.call(snippets, function(snippet) {
        snippet.insertAdjacentHTML("beforebegin", "&amp;lt;button class='btn-copy' data-clipboard-snippet&amp;gt;&amp;lt;img class='clippy' width=13 src='/assets/images/clippy.svg' alt='Copy to clipboard'&amp;gt;&amp;lt;/button&amp;gt;");
    });
    var clipboardSnippets = new Clipboard('[data-clipboard-snippet]', {
        target: function(trigger) {
            return trigger.nextElementSibling;
        }
    });
    clipboardSnippets.on('success', function(e) {
        e.clearSelection();
        showTooltip(e.trigger, "Copied!");
    });
    clipboardSnippets.on('error', function(e) {
        showTooltip(e.trigger, fallbackMessage(e.action));
    });

    var btns = document.querySelectorAll('.btn-copy');
    for (var i = 0; i &amp;lt; btns.length; i++) {
        btns[i].addEventListener('mouseleave', function(e) {
            e.currentTarget.setAttribute('class', 'btn-copy');
            e.currentTarget.removeAttribute('aria-label');
        });
    }

    function showTooltip(elem, msg) {
        elem.setAttribute('class', 'btn-copy tooltipped tooltipped-s');
        elem.setAttribute('aria-label', msg);
    }

    function fallbackMessage(action) {
        var actionMsg = '';
        var actionKey = (action === 'cut' ? 'X' : 'C');
        if (/iPhone|iPad/i.test(navigator.userAgent)) {
            actionMsg = 'No support :(';
        } else if (/Mac/i.test(navigator.userAgent)) {
            actionMsg = 'Press ⌘-' + actionKey + ' to ' + action;
        } else {
            actionMsg = 'Press Ctrl-' + actionKey + ' to ' + action;
        }
        return actionMsg;
    }
    hljs.initHighlightingOnLoad();
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I'll be honest here, I don't know what the purpose of the &lt;code&gt;hljs.initHighlightingOnLoad&lt;/code&gt; is. I've
kept it from the code I stole, but I should really figure out why it's there at some point.&lt;/p&gt;
&lt;p&gt;The CSS was trickier. Like the JavaScript, it was spread out through multiple files. The bigger issue,
though, was that much of it was specific to this site, and not necessarily something we'd need ourselves.
So, I tried to eliminate everything that's not necessary. My CSS skills are a bit lacking, though,
so I may have eliminated too much and/or kept things that are unecessary. However, as you can see
it does work. Long term, it may be that it would benefit from some tweaking. In particular, I'll point
out this all relies on an SVG image for the copy button. I'd like to make this use a glyphicon instead.
Anyway, here's the CSS I've used.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-CSS"&gt;.btn-copy[disabled] .clippy {
    opacity: .3;
}
pre .btn-copy {
    -webkit-transition: opacity 0.3s ease-in-out;
    -o-transition: opacity 0.3s ease-in-out;
    transition: opacity 0.3s ease-in-out;
    opacity: 0;
    padding: 2px 6px;
    float: right;
}
pre:hover .btn-copy {
    opacity: 1;
}
.tooltipped {
    position: relative
}
.tooltipped:after {
    position: absolute;
    z-index: 1000000;
    display: none;
    padding: 5px 8px;
    font: normal normal 11px/1.5 Helvetica, arial, nimbussansl, liberationsans, freesans, clean, sans-serif, "Segoe UI Emoji", "Segoe UI Symbol";
    color: #fff;
    text-align: center;
    text-decoration: none;
    text-shadow: none;
    text-transform: none;
    letter-spacing: normal;
    word-wrap: break-word;
    white-space: pre;
    pointer-events: none;
    content: attr(aria-label);
    background: rgba(0, 0, 0, 0.8);
    border-radius: 3px;
    -webkit-font-smoothing: subpixel-antialiased
}
.tooltipped:before {
    position: absolute;
    z-index: 1000001;
    display: none;
    width: 0;
    height: 0;
    color: rgba(0, 0, 0, 0.8);
    pointer-events: none;
    content: "";
    border: 5px solid transparent
}
.tooltipped:hover:before, .tooltipped:hover:after, .tooltipped:active:before, .tooltipped:active:after, .tooltipped:focus:before, .tooltipped:focus:after {
    display: inline-block;
    text-decoration: none
}
.tooltipped-s:after, .tooltipped-se:after, .tooltipped-sw:after {
    top: 100%;
    right: 50%;
    margin-top: 5px
}
.tooltipped-s:before, .tooltipped-se:before, .tooltipped-sw:before {
    top: auto;
    right: 50%;
    bottom: -5px;
    margin-right: -5px;
    border-bottom-color: rgba(0, 0, 0, 0.8)
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This goes in &lt;code&gt;override.css&lt;/code&gt; in your input directory (create one if you haven't already). Or, like me, you can get creative
and use &lt;a href="http://lesscss.org"&gt;Less&lt;/a&gt;, which I've &lt;a href="/posts/less-in-wyam.md"&gt;blogged about&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;That's it. If @daveglick &lt;a id="fnref:6" href="#fn:2" class="footnote-ref"&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt; hasn't added this to the themes by the time you read this, that's how you can make this work.&lt;/p&gt;
&lt;div class="footnotes"&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;&lt;a href="https://github.com/gep13"&gt;Gary Ewan Park (@gep13)&lt;/a&gt;&lt;a href="#fnref:1" class="footnote-back-ref"&gt;↩&lt;/a&gt;&lt;a href="#fnref:2" class="footnote-back-ref"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:2"&gt;
&lt;p&gt;&lt;a href="https://github.com/daveaglick"&gt;Dave Glick (@daveglick)&lt;/a&gt;&lt;a href="#fnref:3" class="footnote-back-ref"&gt;↩&lt;/a&gt;&lt;a href="#fnref:4" class="footnote-back-ref"&gt;↩&lt;/a&gt;&lt;a href="#fnref:5" class="footnote-back-ref"&gt;↩&lt;/a&gt;&lt;a href="#fnref:6" class="footnote-back-ref"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;


&lt;div id="disqus_thread"&gt;&lt;/div&gt;
&lt;script type="text/javascript"&gt;
    /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
    var disqus_shortname = 'digitaltapestry'; // required: replace example with your forum shortname
    var disqus_identifier = 'wyam-anchors-and-code-copy';
    var disqus_title = 'Wyam Anchors and Code Copy';
    var disqus_url = 'http://digitaltapestry.net/posts/wyam-anchors-and-code-copy';

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
    
    (function () {
        var s = document.createElement('script'); s.async = true;
        s.type = 'text/javascript';
        s.src = '//' + disqus_shortname + '.disqus.com/count.js';
        (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
    }());
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href="http://disqus.com/?ref_noscript"&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
&lt;a href="http://disqus.com" class="dsq-brlink"&gt;comments powered by &lt;span class="logo-disqus"&gt;Disqus&lt;/span&gt;&lt;/a&gt;</content>
		<summary>&lt;p&gt;On the &lt;a href="https://wyam.io"&gt;Wyam&lt;/a&gt; &lt;a href="https://gitter.im/Wyamio/Wyam"&gt;Gitter&lt;/a&gt; discussion Gary Ewan Park (@gep13 &lt;a id="fnref:1" href="#fn:1" class="footnote-ref"&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;)
asked the following:&lt;/p&gt;</summary>
	</entry>
	<entry>
		<link href="http://digitaltapestry.net/posts/markdig-cheat-sheet" />
		<link rel="enclosure" type="image" href="http://digitaltapestry.net/assets/images/banner_web.jpg" />
		<id>http://digitaltapestry.net/posts/markdig-cheat-sheet</id>
		<title>Markdig Cheat Sheet</title>
		<updated>2017-01-08T17:17:42Z</updated>
		<content>&lt;h1 id="markdig-cheat-sheet"&gt;Markdig Cheat Sheet&lt;/h1&gt;
&lt;p&gt;I mentioned in the post &lt;a href="/posts/alerts-in-wyam"&gt;Alerts in Wyam&lt;/a&gt; that Wyam uses Markdig for Markdown
processing, and that Markdig supports extensions. Currently, Markdig lacks documentation. For this
reason, I'm going to try and create a “cheat sheet” for the extensions.&lt;/p&gt;
&lt;h2 id="pipe-tables"&gt;Pipe Tables&lt;/h2&gt;
&lt;table class="table"&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;tag&lt;/th&gt;
&lt;th&gt;docs&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;pipetables –or– advanced&lt;/td&gt;
&lt;td&gt;&lt;a href="http://pandoc.org/MANUAL.html#extension-pipe_tables"&gt;http://pandoc.org/MANUAL.html#extension-pipe_tables&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="code"&gt;Code&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-text"&gt;Right | Left | Default | Center
-----:|:-----|---------|:-----:
12    | 12   | 12      | 12
123   | 123  | 123     | 123
1     | 1    | 1       | 1
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="result"&gt;Result&lt;/h3&gt;
&lt;table class="table"&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style="text-align: right;"&gt;Right&lt;/th&gt;
&lt;th style="text-align: left;"&gt;Left&lt;/th&gt;
&lt;th&gt;Default&lt;/th&gt;
&lt;th style="text-align: center;"&gt;Center&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style="text-align: right;"&gt;12&lt;/td&gt;
&lt;td style="text-align: left;"&gt;12&lt;/td&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td style="text-align: center;"&gt;12&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: right;"&gt;123&lt;/td&gt;
&lt;td style="text-align: left;"&gt;123&lt;/td&gt;
&lt;td&gt;123&lt;/td&gt;
&lt;td style="text-align: center;"&gt;123&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: right;"&gt;1&lt;/td&gt;
&lt;td style="text-align: left;"&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td style="text-align: center;"&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h2 id="grid-tables"&gt;Grid Tables&lt;/h2&gt;
&lt;table class="table"&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;tag&lt;/th&gt;
&lt;th&gt;docs&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;gridtables –or– advanced&lt;/td&gt;
&lt;td&gt;&lt;a href="http://pandoc.org/MANUAL.html#extension-grid_tables"&gt;http://pandoc.org/MANUAL.html#extension-grid_tables&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="code-1"&gt;Code&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-text"&gt;+-------+------+---------+--------+
| Right | Left | Default | Center |
+======:+:=====+=========+:======:+
| 12    | 12   | 12      | 12     |
+-------+------+---------+--------+
| 123   | 123  | 123     | 123    |
+-------+------+---------+--------+
| 1     | 1    | 1       | 1      |
+-------+------+---------+--------+
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="result-1"&gt;Result &lt;a id="fnref:1" href="#fn:1" class="footnote-ref"&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;table class="table"&gt;
&lt;colgroup&gt;&lt;col style="width:23.33%"&gt;
&lt;col style="width:20%"&gt;
&lt;col style="width:30%"&gt;
&lt;col style="width:26.67%"&gt;
&lt;/colgroup&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Right&lt;/th&gt;
&lt;th&gt;Left&lt;/th&gt;
&lt;th&gt;Default&lt;/th&gt;
&lt;th&gt;Center&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;123&lt;/td&gt;
&lt;td&gt;123&lt;/td&gt;
&lt;td&gt;123&lt;/td&gt;
&lt;td&gt;123&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id="extra-emphasis"&gt;Extra Emphasis&lt;/h2&gt;
&lt;table class="table"&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;tag&lt;/th&gt;
&lt;th&gt;docs&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;emphasisextras –or– advanced&lt;/td&gt;
&lt;td&gt;&lt;a href="http://pandoc.org/MANUAL.html#strikeout"&gt;http://pandoc.org/MANUAL.html#strikeout&lt;/a&gt; –and– &lt;a href="https://markdown-it.github.io/"&gt;https://markdown-it.github.io/&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="code-2"&gt;Code&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-text"&gt;~~strike through~~ example

~subscript~ example

^superscript^ example

++inserted++ example

==marked== example
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="result-2"&gt;Result&lt;/h3&gt;
&lt;p&gt;&lt;del&gt;strike through&lt;/del&gt; example&lt;/p&gt;
&lt;p&gt;&lt;sub&gt;subscript&lt;/sub&gt; example&lt;/p&gt;
&lt;p&gt;&lt;sup&gt;superscript&lt;/sup&gt; example&lt;/p&gt;
&lt;p&gt;&lt;ins&gt;inserted&lt;/ins&gt; example&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;marked&lt;/mark&gt; example&lt;/p&gt;
&lt;h2 id="special-attributes"&gt;Special Attributes&lt;/h2&gt;
&lt;table class="table"&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;tag&lt;/th&gt;
&lt;th&gt;docs&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;attributes –or– advanced&lt;/td&gt;
&lt;td&gt;&lt;a href="https://michelf.ca/projects/php-markdown/extra/#spe-attr"&gt;https://michelf.ca/projects/php-markdown/extra/#spe-attr&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="code-3"&gt;Code&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-text"&gt;# Header 1 {#header1}

[Link](#header1) back to header1

# Header 2 {.my-class}

# Le Site {lang=fr}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="result-3"&gt;Result &lt;a id="fnref:2" href="#fn:2" class="footnote-ref"&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;h1 id="header1"&gt;Header 1&lt;/h1&gt;
&lt;p&gt;&lt;a href="#header1"&gt;Link&lt;/a&gt; back to header1&lt;/p&gt;
&lt;h1 id="header-2" class="my-class"&gt;Header 2&lt;/h1&gt;
&lt;h1 id="le-site" lang="fr"&gt;Le Site&lt;/h1&gt;
&lt;h2 id="definition-lists"&gt;Definition Lists&lt;/h2&gt;
&lt;table class="table"&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;tag&lt;/th&gt;
&lt;th&gt;docs&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;definitionlists –or– advanced&lt;/td&gt;
&lt;td&gt;&lt;a href="https://michelf.ca/projects/php-markdown/extra/#def-list"&gt;https://michelf.ca/projects/php-markdown/extra/#def-list&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="code-4"&gt;Code&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-text"&gt;Apple
: Pomaceous fruit of plants of the genus Malus in 
  the family Rosaceae.

Orange
: The fruit of an evergreen tree of the genus Citrus.
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="result-4"&gt;Result &lt;a id="fnref:3" href="#fn:2" class="footnote-ref"&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Apple
: Pomaceous fruit of plants of the genus Malus in
the family Rosaceae.&lt;/p&gt;
&lt;p&gt;Orange
: The fruit of an evergreen tree of the genus Citrus.&lt;/p&gt;
&lt;h2 id="footnotes"&gt;Footnotes&lt;/h2&gt;
&lt;table class="table"&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;tag&lt;/th&gt;
&lt;th&gt;docs&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;footnotes –or– advanced&lt;/td&gt;
&lt;td&gt;&lt;a href="https://michelf.ca/projects/php-markdown/extra/#footnotes"&gt;https://michelf.ca/projects/php-markdown/extra/#footnotes&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="code-5"&gt;Code&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-text"&gt;This is an example[^3] of footnote usage.

[^3]: An example footnote.
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="result-5"&gt;Result&lt;/h3&gt;
&lt;p&gt;This is an example&lt;a id="fnref:6" href="#fn:3" class="footnote-ref"&gt;&lt;sup&gt;3&lt;/sup&gt;&lt;/a&gt; of footnote usage.&lt;/p&gt;
&lt;h2 id="auto-identifiers"&gt;Auto-identifiers&lt;/h2&gt;
&lt;table class="table"&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;tag&lt;/th&gt;
&lt;th&gt;docs&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;autoidentifiers –or– advanced&lt;/td&gt;
&lt;td&gt;&lt;a href="http://pandoc.org/MANUAL.html#extension-auto_identifiers"&gt;http://pandoc.org/MANUAL.html#extension-auto_identifiers&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="code-6"&gt;Code&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-text"&gt;# Automatic Header identifiers

[Link](#automatic-header-identifiers) to header.
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="result-6"&gt;Result&lt;/h3&gt;
&lt;h1 id="automatic-header-identifiers"&gt;Automatic Header identifiers&lt;/h1&gt;
&lt;p&gt;&lt;a href="#automatic-header-identifiers"&gt;Link&lt;/a&gt; to header.&lt;/p&gt;
&lt;h2 id="auto-links"&gt;Auto-links&lt;/h2&gt;
&lt;table class="table"&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;tag&lt;/th&gt;
&lt;th&gt;docs&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;autolinks –or– advanced&lt;/td&gt;
&lt;td&gt;generates links if a text starts with &lt;code&gt;http://&lt;/code&gt; or &lt;code&gt;https://&lt;/code&gt; or &lt;code&gt;ftp://&lt;/code&gt; or &lt;code&gt;mailto:&lt;/code&gt; or &lt;code&gt;www.xxx.yyy&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="code-7"&gt;Code&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-text"&gt;http://www.digitaltapestry.net
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="result-7"&gt;Result&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://www.digitaltapestry.net"&gt;http://www.digitaltapestry.net&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="task-lists"&gt;Task Lists&lt;/h2&gt;
&lt;table class="table"&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;tag&lt;/th&gt;
&lt;th&gt;docs&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;tasklists –or– advanced&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/blog/1375-task-lists-in-gfm-issues-pulls-comments"&gt;https://github.com/blog/1375-task-lists-in-gfm-issues-pulls-comments&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="code-8"&gt;Code&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-text"&gt;- [ ] a task list item
- [ ] list syntax required
- [ ] normal **formatting**
- [ ] incomplete
- [x] completed
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="result-8"&gt;Result&lt;/h3&gt;
&lt;ul class="contains-task-list"&gt;
&lt;li class="task-list-item"&gt;&lt;input disabled="disabled" type="checkbox"&gt; a task list item&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input disabled="disabled" type="checkbox"&gt; list syntax required&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input disabled="disabled" type="checkbox"&gt; normal &lt;strong&gt;formatting&lt;/strong&gt;&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input disabled="disabled" type="checkbox"&gt; incomplete&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input disabled="disabled" type="checkbox" checked="checked"&gt; completed&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="extra-bullet-lists"&gt;Extra Bullet Lists&lt;/h2&gt;
&lt;table class="table"&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;tag&lt;/th&gt;
&lt;th&gt;docs&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;listextras –or– advanced&lt;/td&gt;
&lt;td&gt;supporting alpha bullet a. b. and roman bullet (i, ii...etc.)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="code-9"&gt;Code&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-text"&gt;1. Level 1
    i. Level i
        a. Level a
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="result-9"&gt;Result&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Level 1
&lt;ol type="i"&gt;
&lt;li&gt;Level i
&lt;ol type="a"&gt;
&lt;li&gt;Level a&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="media-support"&gt;Media Support&lt;/h2&gt;
&lt;table class="table"&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;tag&lt;/th&gt;
&lt;th&gt;docs&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;medialinks –or– advanced&lt;/td&gt;
&lt;td&gt;&lt;a href="https://talk.commonmark.org/t/embedded-audio-and-video/441"&gt;https://talk.commonmark.org/t/embedded-audio-and-video/441&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="code-10"&gt;Code&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-text"&gt;![Rick Roll](https://www.youtube.com/watch?v=dQw4w9WgXcQ)
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="result-10"&gt;Result&lt;/h3&gt;
&lt;p&gt;&lt;iframe src="https://www.youtube.com/embed/dQw4w9WgXcQ" class="img-fluid" width="500" height="281" frameborder="0" allowfullscreen=""&gt;&lt;/iframe&gt;&lt;/p&gt;
&lt;h2 id="abbreviations"&gt;Abbreviations&lt;/h2&gt;
&lt;table class="table"&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;tag&lt;/th&gt;
&lt;th&gt;docs&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;abbreviations –or– advanced&lt;/td&gt;
&lt;td&gt;&lt;a href="https://michelf.ca/projects/php-markdown/extra/#abbr"&gt;https://michelf.ca/projects/php-markdown/extra/#abbr&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="code-11"&gt;Code&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-text"&gt;*[HTML]: Hypertext Markup Language

Later in a text we are using HTML and it becomes an abbr tag HTML
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="result-11"&gt;Result&lt;/h3&gt;
&lt;p&gt;Later in a text we are using &lt;abbr title="Hypertext Markup Language"&gt;HTML&lt;/abbr&gt; and it becomes an abbr tag &lt;abbr title="Hypertext Markup Language"&gt;HTML&lt;/abbr&gt;&lt;/p&gt;
&lt;h2 id="citation"&gt;Citation&lt;/h2&gt;
&lt;table class="table"&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;tag&lt;/th&gt;
&lt;th&gt;docs&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;citations –or– advanced&lt;/td&gt;
&lt;td&gt;&lt;a href="https://talk.commonmark.org/t/referencing-creative-works-with-cite/892"&gt;https://talk.commonmark.org/t/referencing-creative-works-with-cite/892&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="code-12"&gt;Code&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-text"&gt;""Tractatus Logico-Philosophicus"" was first published in 1921.
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="result-12"&gt;Result&lt;/h3&gt;
&lt;p&gt;&lt;cite&gt;Tractatus Logico-Philosophicus&lt;/cite&gt; was first published in 1921.&lt;/p&gt;
&lt;h2 id="custom-containers"&gt;Custom Containers&lt;/h2&gt;
&lt;table class="table"&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;tag&lt;/th&gt;
&lt;th&gt;docs&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;customcontainers –or– advanced&lt;/td&gt;
&lt;td&gt;&lt;a href="https://talk.commonmark.org/t/custom-container-for-block-and-inline/2051"&gt;https://talk.commonmark.org/t/custom-container-for-block-and-inline/2051&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="code-13"&gt;Code&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-text"&gt;:::{.alert .alert-info}
This is a Bootstrap alert.
:::
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="result-13"&gt;Result&lt;/h3&gt;
&lt;div class="alert alert-info"&gt;&lt;p&gt;This is a Bootstrap alert.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id="figures"&gt;Figures&lt;/h2&gt;
&lt;table class="table"&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;tag&lt;/th&gt;
&lt;th&gt;docs&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;figures –or– advanced&lt;/td&gt;
&lt;td&gt;&lt;a href="https://talk.commonmark.org/t/image-tag-should-expand-to-figure-when-used-with-title/265/5"&gt;https://talk.commonmark.org/t/image-tag-should-expand-to-figure-when-used-with-title/265/5&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="code-14"&gt;Code&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-text"&gt;![Kookburra](/kookaburra.jpg "Kookburra")
![Pelican](/pelican.jpg "Pelican")
![Cheeky looking Rainbow Lorikeet](/lorikeet.jpg "Rainbow Lorikeet")
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="result-14"&gt;Result&lt;/h3&gt;
&lt;p&gt;&lt;img src="https://upload.wikimedia.org/wikipedia/commons/7/79/Kookaburra_melb.jpg" class="img-fluid" width="100" height="100" alt="Kookburra" title="Kookburra"&gt;
&lt;img src="http://carolinabirds.org/Daniels/Florida/FLlg/Pelican,%20White%20Sanibel2.jpg" class="img-fluid" width="100" height="100" alt="Pelican" title="Pelican"&gt;
&lt;img src="http://images.fineartamerica.com/images-medium-large/female-rainbow-lorikeet--trichoglossus-haematodus-life-on-white.jpg" class="img-fluid" width="100" height="100" alt="Cheeky looking Rainbow Lorikeet" title="Rainbow Lorikeet"&gt;&lt;/p&gt;
&lt;h2 id="footers"&gt;Footers&lt;/h2&gt;
&lt;table class="table"&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;tag&lt;/th&gt;
&lt;th&gt;docs&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;footers –or– advanced&lt;/td&gt;
&lt;td&gt;&lt;a href="https://talk.commonmark.org/t/syntax-for-footer/2070"&gt;https://talk.commonmark.org/t/syntax-for-footer/2070&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="code-15"&gt;Code&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-text"&gt;&amp;gt; This is a blockquote
&amp;gt; ^^ This is a ""citation for name""
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="result-15"&gt;Result&lt;/h3&gt;
&lt;blockquote class="blockquote"&gt;
&lt;p&gt;This is a blockquote&lt;/p&gt;
&lt;footer&gt;This is a &lt;cite&gt;citation for name&lt;/cite&gt;&lt;/footer&gt;
&lt;/blockquote&gt;
&lt;h2 id="mathematics"&gt;Mathematics&lt;/h2&gt;
&lt;table class="table"&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;tag&lt;/th&gt;
&lt;th&gt;docs&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;mathematics –or– advanced&lt;/td&gt;
&lt;td&gt;&lt;a href="https://talk.commonmark.org/t/mathematics-extension/457/31"&gt;https://talk.commonmark.org/t/mathematics-extension/457/31&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="code-16"&gt;Code&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-text"&gt;This is a $math block$

$$
\begin{equation}
  \int_0^\infty \frac{x^3}{e^x-1}\,dx = \frac{\pi^4}{15}
  \label{eq:sample}
\end{equation}
$$
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="result-16"&gt;Result &lt;a id="fnref:4" href="#fn:2" class="footnote-ref"&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt; &lt;a id="fnref:7" href="#fn:4" class="footnote-ref"&gt;&lt;sup&gt;4&lt;/sup&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;This is a &lt;span class="math"&gt;math block&lt;/span&gt;&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation}
  \int_0^\infty \frac{x^3}{e^x-1}\,dx = \frac{\pi^4}{15}
  \label{eq:sample}
\end{equation}
&lt;/div&gt;
&lt;h2 id="emoji"&gt;Emoji&lt;/h2&gt;
&lt;table class="table"&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;tag&lt;/th&gt;
&lt;th&gt;docs&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;emojis&lt;/td&gt;
&lt;td&gt;&lt;a href="https://markdown-it.github.io/"&gt;https://markdown-it.github.io/&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="code-17"&gt;Code&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-text"&gt;It's easy to use emojis. ;) That's cool! 8-)
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="result-17"&gt;Result&lt;/h3&gt;
&lt;p&gt;It's easy to use emojis. 😉 That's cool! 😎&lt;/p&gt;
&lt;h2 id="smartypants"&gt;SmartyPants&lt;/h2&gt;
&lt;table class="table"&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;tag&lt;/th&gt;
&lt;th&gt;docs&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;smartypants&lt;/td&gt;
&lt;td&gt;&lt;a href="https://daringfireball.net/projects/smartypants/"&gt;https://daringfireball.net/projects/smartypants/&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="code-18"&gt;Code&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-text"&gt;This is a "text"

This is a 'text'

This is a &amp;lt;&amp;lt;text&amp;gt;&amp;gt;

This is a "text

This is a "text 'with" a another text'

This is a -- text

This is a --- text

This is a en ellipsis...
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="result-18"&gt;Result&lt;/h3&gt;
&lt;p&gt;This is a “text”&lt;/p&gt;
&lt;p&gt;This is a ‘text’&lt;/p&gt;
&lt;p&gt;This is a «text»&lt;/p&gt;
&lt;p&gt;This is a "text&lt;/p&gt;
&lt;p&gt;This is a “text 'with” a another text'&lt;/p&gt;
&lt;p&gt;This is a – text&lt;/p&gt;
&lt;p&gt;This is a — text&lt;/p&gt;
&lt;p&gt;This is a en ellipsis…&lt;/p&gt;
&lt;h2 id="diagrams"&gt;Diagrams&lt;/h2&gt;
&lt;table class="table"&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;tag&lt;/th&gt;
&lt;th&gt;docs&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;diagrams –or– advanced&lt;/td&gt;
&lt;td&gt;&lt;a href="https://knsv.github.io/mermaid/"&gt;https://knsv.github.io/mermaid/&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="code-19"&gt;Code&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-text"&gt;    ```mermaid
    graph TD;
        A--&amp;gt;B;
        A--&amp;gt;C;
        B--&amp;gt;D;
        C--&amp;gt;D;
    ```
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="result-19"&gt;Result &lt;a id="fnref:5" href="#fn:2" class="footnote-ref"&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt; &lt;a id="fnref:8" href="#fn:5" class="footnote-ref"&gt;&lt;sup&gt;5&lt;/sup&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;div class="mermaid"&gt;graph TD;
    A--&amp;gt;B;
    A--&amp;gt;C;
    B--&amp;gt;D;
    C--&amp;gt;D;
&lt;/div&gt;
&lt;hr&gt;
&lt;div class="footnotes"&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;Alignment doesn't appear to be working, and I don't now why.&lt;a href="#fnref:1" class="footnote-back-ref"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:2"&gt;
&lt;p&gt;Not all results are visibly evident with the current styling. View the &lt;abbr title="Hypertext Markup Language"&gt;HTML&lt;/abbr&gt; produced.&lt;a href="#fnref:2" class="footnote-back-ref"&gt;↩&lt;/a&gt;&lt;a href="#fnref:3" class="footnote-back-ref"&gt;↩&lt;/a&gt;&lt;a href="#fnref:4" class="footnote-back-ref"&gt;↩&lt;/a&gt;&lt;a href="#fnref:5" class="footnote-back-ref"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:3"&gt;
&lt;p&gt;An example footnote.&lt;a href="#fnref:6" class="footnote-back-ref"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:4"&gt;
&lt;p&gt;I'll be honest, I don't understand the use case for this one.&lt;a href="#fnref:7" class="footnote-back-ref"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:5"&gt;
&lt;p&gt;This needs mermaid.css and mermaid.js to be linked. I've done so here, but the way you do it will be
improved the next release, so I'll wait to blog about that. Not sure why the generated diagram here
is missing the arrow lines, but I don't believe it's got anything to do with Wyam or Markdig.&lt;a href="#fnref:8" class="footnote-back-ref"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;


&lt;div id="disqus_thread"&gt;&lt;/div&gt;
&lt;script type="text/javascript"&gt;
    /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
    var disqus_shortname = 'digitaltapestry'; // required: replace example with your forum shortname
    var disqus_identifier = 'markdig-cheat-sheet';
    var disqus_title = 'Markdig Cheat Sheet';
    var disqus_url = 'http://digitaltapestry.net/posts/markdig-cheat-sheet';

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
    
    (function () {
        var s = document.createElement('script'); s.async = true;
        s.type = 'text/javascript';
        s.src = '//' + disqus_shortname + '.disqus.com/count.js';
        (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
    }());
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href="http://disqus.com/?ref_noscript"&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
&lt;a href="http://disqus.com" class="dsq-brlink"&gt;comments powered by &lt;span class="logo-disqus"&gt;Disqus&lt;/span&gt;&lt;/a&gt;</content>
		<summary>&lt;p&gt;I mentioned in the post &lt;a href="/posts/alerts-in-wyam"&gt;Alerts in Wyam&lt;/a&gt; that Wyam uses Markdig for Markdown
processing, and that Markdig supports extensions. Currently, Markdig lacks documentation. For this
reason, I'm going to try and create a “cheat sheet” for the extensions.&lt;/p&gt;</summary>
	</entry>
	<entry>
		<link href="http://digitaltapestry.net/posts/less-in-wyam" />
		<link rel="enclosure" type="image" href="http://digitaltapestry.net/assets/images/banner_web.jpg" />
		<id>http://digitaltapestry.net/posts/less-in-wyam</id>
		<title>Less in Wyam</title>
		<updated>2017-01-08T13:25:42Z</updated>
		<content>&lt;h1 id="less-in-wyam"&gt;Less in Wyam&lt;/h1&gt;
&lt;p&gt;In the &lt;a href="/posts/alerts-in-wyam"&gt;last post&lt;/a&gt; I showed how to use Bootstrap alerts from
within a Wyam based blog site. I included some CSS to restyle the alerts to include
glyphicons for the various alert types. The CSS I used had a lot of repetitive code.
The &lt;a href="http://lesscs.org"&gt;Less&lt;/a&gt; CSS preprocessor makes it easy to use mixins to eliminate
duplicate code in CSS files. Wyam has a module for using Less, so I updated my site
to use it.&lt;/p&gt;
&lt;p&gt;The first thing I had to do was modify my config.wyam file.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;#n -p Wyam.Less
#n -p Wyam.Minification

Settings.Host = "digitaltapestry.net";
GlobalMetadata["Title"] = "Digital Tapestry";
GlobalMetadata["Description"] = "Weaving a Digital Tapestry";
GlobalMetadata["Intro"] = "The musings of a .NET developer.";

Pipelines.Add("Less",
    ReadFiles("**/*.less"),
    Less(),
    MinifyCss(),
    WriteFiles(".css")
);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Obviously this is specific to my site. You'll need the &lt;code&gt;#n -p Wyam.Less&lt;/code&gt;, &lt;code&gt;#n -p Wyam.Minification&lt;/code&gt;
and the call to &lt;code&gt;Pipelines.Add&lt;/code&gt; while the rest is site specific. &lt;code&gt;MinifyCss&lt;/code&gt; is optional. it
minifies the output CSS, which is a good idea for “production”, but you may not want to do it while
working on the CSS.&lt;/p&gt;
&lt;p&gt;With that in place I created a &lt;code&gt;input\assets\css\override.less&lt;/code&gt; with the following
code.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-css"&gt;.alert {
    margin-left: 10px;
}
.alert &amp;gt; p {
    margin-top: 0px;
}
.alert-glyphicon {
    position: relative;
    top: 1px;
    float: left;
    margin-right: 8px;
    font-family: 'Glyphicons Halflings';
    font-style: normal;
    font-weight: normal;
    line-height: 1;
    -webkit-font-smoothing: antialiased;
}
.alert-success:before {
    content: "\e125";
    .alert-glyphicon;
}
.alert-info:before {
    content: "\270f";
    .alert-glyphicon;
}
.alert-warning:before {
    content: "\e107";
    .alert-glyphicon;
}
.alert-danger:before {
    content: "\e074";
    .alert-glyphicon;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This is simpler than the original CSS thanks to the &lt;code&gt;.alert-glyphicon&lt;/code&gt; mixin.&lt;/p&gt;
&lt;p&gt;If you've already created a &lt;code&gt;input\assets\css\override.css&lt;/code&gt; you'll have to delete
it. Now when you build the site, &lt;code&gt;override.less&lt;/code&gt; gets compiled to &lt;code&gt;override.css&lt;/code&gt;.
This does still copy the &lt;code&gt;override.less&lt;/code&gt; file to the output as well. &lt;del&gt;&lt;sub&gt;If I figure
out how to remove that, I'll update this post.&lt;/sub&gt;&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;Update: Dave Glick, the awesome author of Wyam, solved the issue of the LESS file being copied for me on
&lt;a href="https://gitter.im/Wyamio/Wyam"&gt;Gitter&lt;/a&gt;. He answers inquiries on there so quickly that I suspect he's
actually an AI robot. 😉&lt;/p&gt;
&lt;p&gt;Here's the code to add to remove LESS files from being copied to the output.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;Pipelines[BlogPipelines.Resources].Clear();
Pipelines[BlogPipelines.Resources].Add(
    CopyFiles("**/*{!.cshtml,!.md,!.less,}")
);
&lt;/code&gt;&lt;/pre&gt;


&lt;div id="disqus_thread"&gt;&lt;/div&gt;
&lt;script type="text/javascript"&gt;
    /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
    var disqus_shortname = 'digitaltapestry'; // required: replace example with your forum shortname
    var disqus_identifier = 'less-in-wyam';
    var disqus_title = 'Less in Wyam';
    var disqus_url = 'http://digitaltapestry.net/posts/less-in-wyam';

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
    
    (function () {
        var s = document.createElement('script'); s.async = true;
        s.type = 'text/javascript';
        s.src = '//' + disqus_shortname + '.disqus.com/count.js';
        (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
    }());
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href="http://disqus.com/?ref_noscript"&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
&lt;a href="http://disqus.com" class="dsq-brlink"&gt;comments powered by &lt;span class="logo-disqus"&gt;Disqus&lt;/span&gt;&lt;/a&gt;</content>
		<summary>&lt;p&gt;In the &lt;a href="/posts/alerts-in-wyam"&gt;last post&lt;/a&gt; I showed how to use Bootstrap alerts from
within a Wyam based blog site. I included some CSS to restyle the alerts to include
glyphicons for the various alert types. The CSS I used had a lot of repetitive code.
The &lt;a href="http://lesscs.org"&gt;Less&lt;/a&gt; CSS preprocessor makes it easy to use mixins to eliminate
duplicate code in CSS files. Wyam has a module for using Less, so I updated my site
to use it.&lt;/p&gt;</summary>
	</entry>
	<entry>
		<link href="http://digitaltapestry.net/posts/alerts-in-wyam" />
		<link rel="enclosure" type="image" href="http://digitaltapestry.net/assets/images/banner_web.jpg" />
		<id>http://digitaltapestry.net/posts/alerts-in-wyam</id>
		<title>Alerts In Wyam</title>
		<updated>2017-01-08T11:02:00Z</updated>
		<content>&lt;h1 id="alerts-in-wyam"&gt;Alerts in Wyam&lt;/h1&gt;
&lt;p&gt;Bootstrap has the concept of “alerts”, which are specially styled divs used to call out notes.
Here's some examples:&lt;/p&gt;
&lt;div class="alert alert-success"&gt;&lt;p&gt;A success alert.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="alert alert-info"&gt;&lt;p&gt;An info alert.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="alert alert-warning"&gt;&lt;p&gt;A warning alert.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="alert alert-danger"&gt;&lt;p&gt;A danger alert.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;I wanted to be able to add these alerts to a Markdown document processed by &lt;a href="https://wyam.io"&gt;Wyam&lt;/a&gt;.
It took me a while to figure this out. Wyam uses &lt;a href="https://github.com/lunet-io/markdig/"&gt;Markdig&lt;/a&gt;
for the Markdown processor, which includes several extensions. Which extensions are used is
controllable via the global metadata &lt;code&gt;MarkdownExtensions&lt;/code&gt; property, which defaults to “advanced+bootstrap”.
The "advanced" part of that includes many extensions, but the important ones here are the extension
for custom containers and special attributes. Combined, they let you code an alert like this:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-markdown"&gt;:::{.alert .alert-warning}
A warning alert.
:::
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;:::&lt;/code&gt; is similar to a code fence, but defines a custom container (a div), while &lt;code&gt;{.alert .alert-warning}&lt;/code&gt;
specifies the CSS classes to add to the element.&lt;/p&gt;
&lt;p&gt;I wanted to modify the styling for the alerts a bit, in order to include a glyphicon in every such alert.
So, I created a &lt;code&gt;input\assets\css\override.css&lt;/code&gt; file to replace the file in the theme with the following
contents:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-css"&gt;.alert {
    margin-left: 10px;
}
.alert-success:before {
    position: relative;
    top: 1px;
    float: left;
    margin-right: 8px;
    font-family: 'Glyphicons Halflings';
    font-style: normal;
    font-weight: normal;
    line-height: 1;
    -webkit-font-smoothing: antialiased;
    content: "\e125";
}
.alert-info:before {
    position: relative;
    top: 1px;
    float: left;
    margin-right: 8px;
    font-family: 'Glyphicons Halflings';
    font-style: normal;
    font-weight: normal;
    line-height: 1;
    -webkit-font-smoothing: antialiased;
    content: "\270f";
}
.alert-warning:before {
    position: relative;
    top: 1px;
    float: left;
    margin-right: 8px;
    font-family: 'Glyphicons Halflings';
    font-style: normal;
    font-weight: normal;
    line-height: 1;
    -webkit-font-smoothing: antialiased;
    content: "\e107";
}
.alert-danger:before {
    position: relative;
    top: 1px;
    float: left;
    margin-right: 8px;
    font-family: 'Glyphicons Halflings';
    font-style: normal;
    font-weight: normal;
    line-height: 1;
    -webkit-font-smoothing: antialiased;
    content: "\e074";
}
.alert &amp;gt; p {
    margin-top: 0px;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The examples I showed at the top of this post were created using the Markdown from the example and styled
with the above CSS.&lt;/p&gt;


&lt;div id="disqus_thread"&gt;&lt;/div&gt;
&lt;script type="text/javascript"&gt;
    /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
    var disqus_shortname = 'digitaltapestry'; // required: replace example with your forum shortname
    var disqus_identifier = 'alerts-in-wyam';
    var disqus_title = 'Alerts In Wyam';
    var disqus_url = 'http://digitaltapestry.net/posts/alerts-in-wyam';

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
    
    (function () {
        var s = document.createElement('script'); s.async = true;
        s.type = 'text/javascript';
        s.src = '//' + disqus_shortname + '.disqus.com/count.js';
        (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
    }());
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href="http://disqus.com/?ref_noscript"&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
&lt;a href="http://disqus.com" class="dsq-brlink"&gt;comments powered by &lt;span class="logo-disqus"&gt;Disqus&lt;/span&gt;&lt;/a&gt;</content>
		<summary>&lt;p&gt;Bootstrap has the concept of “alerts”, which are specially styled divs used to call out notes.
Here's some examples:&lt;/p&gt;</summary>
	</entry>
	<entry>
		<link href="http://digitaltapestry.net/posts/understanding-task-II" />
		<link rel="enclosure" type="image" href="http://digitaltapestry.net/assets/banner_web.jpg" />
		<id>http://digitaltapestry.net/posts/understanding-task-II</id>
		<title>Understanding Task - Part II</title>
		<updated>2017-01-07T12:39:00Z</updated>
		<content>&lt;h1 id="understanding-task"&gt;Understanding Task&lt;/h1&gt;
&lt;h2 id="part-i"&gt;Part I&lt;/h2&gt;
&lt;p&gt;In &lt;a href="/posts/understanding-task-I"&gt;Part I&lt;/a&gt; I explained that a &lt;code&gt;Task&lt;/code&gt; is really &lt;strong&gt;just&lt;/strong&gt; a datastructure
that represents the result of “something”, and implemented a &lt;em&gt;very&lt;/em&gt; basic &lt;code&gt;MyTask&amp;lt;T&amp;gt;&lt;/code&gt; to illustrate
that. Of course, that isn't a very complete picture and I promised that this time around we'd
update &lt;code&gt;MyTask&amp;lt;T&amp;gt;&lt;/code&gt; to more closely represent the mental model you have for &lt;code&gt;Task&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Most developer's mental model is very firmly fixed around a &lt;code&gt;Task&lt;/code&gt; representing a thread, or maybe
they have a slightly better understanding and think of it as something run on the thread pool. A
very few might actually think in terms of any asynchronous operation, which is much closer to the
truth. In the Task Programming Library (TPL) we call it a &lt;code&gt;Task&lt;/code&gt;, but other languages and frameworks
call them a &lt;code&gt;Promise&lt;/code&gt; or a &lt;code&gt;Future&lt;/code&gt;. These are probably better names, to be honest, as they get you
closer to the correct mental model.&lt;/p&gt;
&lt;p&gt;I said a &lt;code&gt;Task&lt;/code&gt; is just the result of &lt;em&gt;something&lt;/em&gt;, but let's refine that. It's a datastructure that
represents the result of &lt;em&gt;something once there is a result&lt;/em&gt;. The result may exist now, or it may
exist in the future, and the &lt;code&gt;Task&lt;/code&gt; represents that result &lt;em&gt;now&lt;/em&gt;. That may be a complicated explanation
for you to understand, so once again we'll attempt to make it concrete.&lt;/p&gt;
&lt;p&gt;Currently, our &lt;code&gt;MyTask&amp;lt;T&amp;gt;&lt;/code&gt; represents a result that's already available. Let's modify it so it can
&lt;em&gt;also&lt;/em&gt; represent a result that may be available only in the future. Here's our code so far.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;public class MyTask&amp;lt;TResult&amp;gt;
{
    private MyTask()
    {
    }

    public static MyTask&amp;lt;TResult&amp;gt; SetError(Exception e) =&amp;gt; new MyTask&amp;lt;TResult&amp;gt; { Error = e };

    public static MyTask&amp;lt;TResult&amp;gt; SetResult(TResult result) =&amp;gt; new MyTask&amp;lt;TResult&amp;gt; { Result = result };

    public Exception Error { get; private set; }

    public TResult Result { get; private set; }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If this is  going to represent a result that may only be available in the future, we need some way to
set the result in the future. This is a tricky thing to solve, and this is where the TPL gets really
clever. We need to create a &lt;code&gt;MyTask&amp;lt;T&amp;gt;&lt;/code&gt; that doesn't have a result, and then have some way to set the
result in the future. However, we don't want just anyone to be able to set the result. We want only
the code/method that creates the &lt;code&gt;MyTask&amp;lt;T&amp;gt;&lt;/code&gt; instance to be able to set its result. The TPL does this
by using another type as both a factory object and the only way to set the result of the &lt;code&gt;Task&lt;/code&gt;.
In the TPL, this type is called the &lt;code&gt;TaskCompletionSource&amp;lt;T&amp;gt;&lt;/code&gt;. Let's create our own &lt;code&gt;MyTaskCompletionSource&amp;lt;T&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;public class MyTask&amp;lt;TResult&amp;gt;
{
    internal MyTask()
    {
    }

    public Exception Error { get; internal set; }

    public TResult Result { get; internal set; }
}

public class MyTaskCompletionSource&amp;lt;TResult&amp;gt;
{
    public MyTask&amp;lt;TResult&amp;gt; Task { get; } = new MyTask&amp;lt;TResult&amp;gt;();

    public void SetError(Exception e) =&amp;gt; Task.Error = e;

    public void SetResult(TResult result) =&amp;gt; Task.Result = result;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;MyTask&amp;lt;T&amp;gt;&lt;/code&gt; constructor and the setters for &lt;code&gt;Error&lt;/code&gt; and &lt;code&gt;Result&lt;/code&gt; are all declared internal. Only
&lt;code&gt;MyTaskCompletionSource&amp;lt;T&amp;gt;&lt;/code&gt; should call these. The only way for end user code to create a &lt;code&gt;MyTask&amp;lt;T&amp;gt;&lt;/code&gt;
and to set its results is to use a &lt;code&gt;MyTaskCompletionSource&amp;lt;T&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;So, we've split up the construction from the setting of the results, allowing us to set the results sometime
in the future. However, there's no way to know when the result is available, and so trying to get the
&lt;code&gt;Result&lt;/code&gt; or the &lt;code&gt;Error&lt;/code&gt; before it's been set won't behave the way we'd like. Things will get a bit more
complicated now, but lets solve these problems.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;public class MyTask&amp;lt;TResult&amp;gt;
{
    private readonly ManualResetEvent completedEvent = new ManualResetEvent(false);
    private Exception error;
    private TResult result;

    internal MyTask()
    {
    }

    public Exception Error
    {
        get
        {
            this.completedEvent.WaitOne();
            return this.error;
        }

        set
        {
            this.error = value;
            this.completedEvent.Set();
        }
    }

    public TResult Result
    {
        get
        {
            this.completedEvent.WaitOne();
            if (this.error != null)
            {
                throw new InvalidOperationException("Operation failed.", this.error);
            }

            return this.result;
        }

        set
        {
            this.result = value;
            this.completedEvent.WaitOne();
        }
    }
}

public class MyTaskCompletionSource&amp;lt;TResult&amp;gt;
{
    public MyTask&amp;lt;TResult&amp;gt; Task { get; } = new MyTask&amp;lt;TResult&amp;gt;();

    public void SetError(Exception e) =&amp;gt; Task.Error = e;

    public void SetResult(TResult result) =&amp;gt; Task.Result = result;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote class="blockquote"&gt;
&lt;p&gt;WARNING: The above code is &lt;strong&gt;NOT&lt;/strong&gt; thread-safe.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I told you I'd show you a naive implementation. This code illustrates the ideas well, but it is &lt;strong&gt;NOT&lt;/strong&gt;
thread-safe and there are other issues (like the &lt;code&gt;MyTaskCompletionSource&amp;lt;T&amp;gt;&lt;/code&gt; being able to set
both a &lt;code&gt;Result&lt;/code&gt; and an &lt;code&gt;Error&lt;/code&gt;). I'm not trying to write production code here, but instead to just
get across the concepts. Since &lt;code&gt;Task&lt;/code&gt; already exists I feel safe in posting code like this, because no
one would ever use it, but heed my warning: don't use this code as a way to understand how to write
thread-safe or production code.&lt;/p&gt;
&lt;p&gt;So, with the warnings out of the way, let's see what we did. Our &lt;code&gt;MyTask&amp;lt;T&amp;gt;&lt;/code&gt; now has a &lt;code&gt;ManualResetEvent&lt;/code&gt;
that helps us to know &lt;em&gt;when&lt;/em&gt; the results have been set. We modified the setters for &lt;code&gt;Error&lt;/code&gt; and
&lt;code&gt;Result&lt;/code&gt; so that when the &lt;code&gt;MyTaskCompletionSource&amp;lt;T&amp;gt;&lt;/code&gt; calls them the event is set as well. Meanwhile,
the getters wait for this event to be set, making them blocking calls that will wait for the values
to be set before returning them. In addition, I went ahead and made the getter for &lt;code&gt;Result&lt;/code&gt; throw an
exception if the result is actually an &lt;code&gt;Error&lt;/code&gt; instead.&lt;/p&gt;
&lt;p&gt;I hope the lightbulb just turned on for many of you. While the implementation is horrid, it does
represent the bulk of what a real &lt;code&gt;Task&lt;/code&gt; is. In fact, there's only two concepts we've left out
here: continuations and cancellation. I'm not going to cover those anytime soon.&lt;/p&gt;
&lt;p&gt;Note that there's no &lt;code&gt;Thread&lt;/code&gt; anywhere in this code. Nor have I used the thread pool. Despite that,
this &lt;em&gt;is&lt;/em&gt; a complete representation of a &lt;code&gt;Task&lt;/code&gt; (minus continuations and cancellation, of course).
I here some of you saying “but what about &lt;code&gt;Task.Run&lt;/code&gt;?” Well, we'll talk about that and other
related concepts next time, but &lt;code&gt;Task&lt;/code&gt; doesn't really need them. This is really the complete
concept of a &lt;code&gt;Task&lt;/code&gt;, and if you shift your mental model to think in these terms you'll be
much better suited for using the TPL.&lt;/p&gt;


&lt;div id="disqus_thread"&gt;&lt;/div&gt;
&lt;script type="text/javascript"&gt;
    /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
    var disqus_shortname = 'digitaltapestry'; // required: replace example with your forum shortname
    var disqus_identifier = 'understanding-task-II';
    var disqus_title = 'Understanding Task - Part II';
    var disqus_url = 'http://digitaltapestry.net/posts/understanding-task-II';

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
    
    (function () {
        var s = document.createElement('script'); s.async = true;
        s.type = 'text/javascript';
        s.src = '//' + disqus_shortname + '.disqus.com/count.js';
        (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
    }());
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href="http://disqus.com/?ref_noscript"&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
&lt;a href="http://disqus.com" class="dsq-brlink"&gt;comments powered by &lt;span class="logo-disqus"&gt;Disqus&lt;/span&gt;&lt;/a&gt;</content>
		<summary>&lt;p&gt;In &lt;a href="/posts/understanding-task-I"&gt;Part I&lt;/a&gt; I explained that a &lt;code&gt;Task&lt;/code&gt; is really &lt;strong&gt;just&lt;/strong&gt; a datastructure
that represents the result of “something”, and implemented a &lt;em&gt;very&lt;/em&gt; basic &lt;code&gt;MyTask&amp;lt;T&amp;gt;&lt;/code&gt; to illustrate
that. Of course, that isn't a very complete picture and I promised that this time around we'd
update &lt;code&gt;MyTask&amp;lt;T&amp;gt;&lt;/code&gt; to more closely represent the mental model you have for &lt;code&gt;Task&lt;/code&gt;.&lt;/p&gt;</summary>
	</entry>
	<entry>
		<link href="http://digitaltapestry.net/posts/understanding-task-I" />
		<link rel="enclosure" type="image" href="http://digitaltapestry.net/assets/images/banner_web.jpg" />
		<id>http://digitaltapestry.net/posts/understanding-task-I</id>
		<title>Understanding Task - Part I</title>
		<updated>2017-01-07T00:00:00Z</updated>
		<content>&lt;h1 id="understanding-task"&gt;Understanding Task&lt;/h1&gt;
&lt;h2 id="part-i"&gt;Part I&lt;/h2&gt;
&lt;p&gt;I've noticed that many developers I work and talk with have a pretty big misunderstanding of the &lt;code&gt;Task&lt;/code&gt; and &lt;code&gt;Task&amp;lt;T&amp;gt;&lt;/code&gt; types
from the Task Programming Library (TPL). In their minds a &lt;code&gt;Task&lt;/code&gt; is a synonym for a &lt;code&gt;Thread&lt;/code&gt;. With a bit of explanation
I can get them to almost understand that a &lt;code&gt;Task&lt;/code&gt; is more often than not run on the thread pool, or represents asynchronous
I/O, but I don't get the feeling that I too often actually get them to understand this at a deep level. I think that
being able to effectively write programs with the TPL you do need this understanding, so I'm going to write a blog series
about asynchronous programming from a different point of view than most. I'm going to start from the bottom and work my
way up, while most other books/blogs/articles start at the top and work their way down, though usually not going to deep.
My hope is that by working from the bottom up, some of the mystery will just disappear.&lt;/p&gt;
&lt;p&gt;I'll start by once again defining what a &lt;code&gt;Task&lt;/code&gt; is at its most basic definition. A &lt;code&gt;Task&lt;/code&gt; isn't something magical. Nor is
it really what the name implies: a running operation of some sort. No, a &lt;code&gt;Task&lt;/code&gt; is just a simple data structure that
holds the result of something. That's it. At this point, don't even think in terms of that “something” being an asynchronous
operation. At it's simplest, that is not the case, and thinking in those terms right now will just confuse you and lead
you to some incorrect assumptions. Dispel this thought from your mind.&lt;/p&gt;
&lt;p&gt;So, let's make this idea concrete instead of just asking you to comprehend this based solely on the claims somebody
on the Internet made. Let's actually start to build our own version of the TPL to understand this. Granted, what
we'll develop here and in future parts of this seriese will be naive implementations and a far cry from the actual
implementation in the TPL, but it will give us very deep understandings of what the TPL is all about. Remember, though,
we're building this from the bottom up. Don't try and think about where we'll be next or how we'll wind up at what
you're familiar with. Just stay with me at the stage in development that we're at.&lt;/p&gt;
&lt;p&gt;So, let's create a &lt;code&gt;MyTask&amp;lt;T&amp;gt;&lt;/code&gt;. For now we're going to ignore the non-generic version. We're also going to make the
most basic thing we can, ignoring many things that you know exist for the real &lt;code&gt;Task&amp;lt;T&amp;gt;&lt;/code&gt;. Please, try not to think
about what you know, and just think about what we need at the simplest. From my description of what a &lt;code&gt;Task&lt;/code&gt; is,
the simplest implementation for our &lt;code&gt;MyTask&amp;lt;T&amp;gt;&lt;/code&gt; could look something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;public class MyTask&amp;lt;TResult&amp;gt;
{
    public TResult Result { get; set; }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Really, it's as simple as that. This is a data structure that represents the result of “something”. Most of what a
&lt;code&gt;Task&lt;/code&gt; is all about is represented in the above code. Truly, I'm not trying to deceive you here, and if you're looking
for a deep understanding of the TPL, this isn't a gross oversimplification either. Yes, it is a simplification,
without a doubt, but it &lt;em&gt;does&lt;/em&gt; give a very accurate representation of the concept of a &lt;code&gt;Task&lt;/code&gt;. A &lt;code&gt;Task&lt;/code&gt; &lt;em&gt;is&lt;/em&gt;
just the result of &lt;em&gt;something&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Obviously, where not done. I will contend this represents the largest portion of the concept of a &lt;code&gt;Task&lt;/code&gt;, but that
doesn't mean we're done here. In fact, I've not done enough to make the light bulb click for you yet, I'm sure. At
this point you have more questions than you had before, and you're likely just thinking I'm a pretentious no-it-all
for distilling things down to this level. Bear with me. We're going to start fleshing things out now, and you'll
start to see the larger picture.&lt;/p&gt;
&lt;p&gt;So, a &lt;code&gt;Task&lt;/code&gt; just represents the result of &lt;em&gt;something&lt;/em&gt;, but the above doesn't really go far enough to allow us to
represent the result of &lt;em&gt;anything&lt;/em&gt;, or more accurately anything we'd model in a program. If nothing else, as
developers we realize most of the things we'd care to represent the result of has the potential to fail, so the
result is either successful or not. In .NET we represent failures with an &lt;code&gt;Exception&lt;/code&gt;, so lets modify our code
to include this.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;public class MyTask&amp;lt;TResult&amp;gt;
{
    public Exception Error { get; set; }

    public TResult Result { get; set; }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This is starting to more closely resemble what we're used to, but there's serious problems with this code even
at this simple level. With it coded the way it is the &lt;code&gt;MyTask&amp;lt;T&amp;gt;&lt;/code&gt; could have &lt;em&gt;both&lt;/em&gt; a &lt;code&gt;Result&lt;/code&gt; and an &lt;code&gt;Error&lt;/code&gt;.
We need to constrain what it can represent. We'll do that by making the type immutable. While we're at it,
let's use factory methods instead of constructors to create instances of this.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;public class MyTask&amp;lt;TResult&amp;gt;
{
    private MyTask()
    {
    }

    public static MyTask&amp;lt;TResult&amp;gt; SetError(Exception e) =&amp;gt; new MyTask&amp;lt;TResult&amp;gt; { Error = e };

    public static MyTask&amp;lt;TResult&amp;gt; SetResult(TResult result) =&amp;gt; new MyTask&amp;lt;TResult&amp;gt; { Result = result };

    public Exception Error { get; private set; }

    public TResult Result { get; private set; }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;There, that's it for now. Pretty simple, huh? Yeah, I know you still have questions. This code does a good
job representing my definition of a &lt;code&gt;Task&lt;/code&gt;, but it's done &lt;em&gt;nothing&lt;/em&gt; to turn the light bulb on yet, because
we're still missing some functionality that you know must exist. We'll come much closer to the mental model
you have next time, but in doing so I hope to also start to make you let go of that mental model and replace
it with a more accurate one.&lt;/p&gt;


&lt;div id="disqus_thread"&gt;&lt;/div&gt;
&lt;script type="text/javascript"&gt;
    /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
    var disqus_shortname = 'digitaltapestry'; // required: replace example with your forum shortname
    var disqus_identifier = 'understanding-task-I';
    var disqus_title = 'Understanding Task - Part I';
    var disqus_url = 'http://digitaltapestry.net/posts/understanding-task-I';

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
    
    (function () {
        var s = document.createElement('script'); s.async = true;
        s.type = 'text/javascript';
        s.src = '//' + disqus_shortname + '.disqus.com/count.js';
        (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
    }());
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href="http://disqus.com/?ref_noscript"&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
&lt;a href="http://disqus.com" class="dsq-brlink"&gt;comments powered by &lt;span class="logo-disqus"&gt;Disqus&lt;/span&gt;&lt;/a&gt;</content>
		<summary>&lt;p&gt;I've noticed that many developers I work and talk with have a pretty big misunderstanding of the &lt;code&gt;Task&lt;/code&gt; and &lt;code&gt;Task&amp;lt;T&amp;gt;&lt;/code&gt; types
from the Task Programming Library (TPL). In their minds a &lt;code&gt;Task&lt;/code&gt; is a synonym for a &lt;code&gt;Thread&lt;/code&gt;. With a bit of explanation
I can get them to almost understand that a &lt;code&gt;Task&lt;/code&gt; is more often than not run on the thread pool, or represents asynchronous
I/O, but I don't get the feeling that I too often actually get them to understand this at a deep level. I think that
being able to effectively write programs with the TPL you do need this understanding, so I'm going to write a blog series
about asynchronous programming from a different point of view than most. I'm going to start from the bottom and work my
way up, while most other books/blogs/articles start at the top and work their way down, though usually not going to deep.
My hope is that by working from the bottom up, some of the mystery will just disappear.&lt;/p&gt;</summary>
	</entry>
	<entry>
		<link href="http://digitaltapestry.net/posts/logging-part-II" />
		<link rel="enclosure" type="image" href="http://digitaltapestry.net/assets/images/banner_web.jpg" />
		<id>http://digitaltapestry.net/posts/logging-part-II</id>
		<title>Logging - Part II</title>
		<updated>2017-01-01T00:00:00Z</updated>
		<content>&lt;h1 id="logging"&gt;Logging&lt;/h1&gt;
&lt;h2 id="part-ii"&gt;Part II&lt;/h2&gt;
&lt;p&gt;In &lt;a href="/posts/logging-part-I"&gt;Part I&lt;/a&gt; we were introduced to &lt;a href="https://github.com/aspnet/Logging"&gt;Microsoft.Extensions.Logging&lt;/a&gt;
which I amusingly abbreviate to just MEL. In particular, we explored the design of the &lt;code&gt;ILogger&lt;/code&gt; interface.
In this post we'll continue to explore MEL by looking next at the design of the &lt;code&gt;ILoggerFactory&lt;/code&gt; interface.&lt;/p&gt;
&lt;h3 id="iloggerfactory"&gt;ILoggerFactory&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;ILoggerFactory&lt;/code&gt; type is used to create &lt;code&gt;ILogger&lt;/code&gt; instances. Here it is:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;/// &amp;lt;summary&amp;gt;
/// Represents a type used to configure the logging system and create instances of &amp;lt;see cref="ILogger"/&amp;gt; from
/// the registered &amp;lt;see cref="ILoggerProvider"/&amp;gt;s.
/// &amp;lt;/summary&amp;gt;
public interface ILoggerFactory : IDisposable
{
    /// &amp;lt;summary&amp;gt;
    /// Creates a new &amp;lt;see cref="ILogger"/&amp;gt; instance.
    /// &amp;lt;/summary&amp;gt;
    /// &amp;lt;param name="categoryName"&amp;gt;The category name for messages produced by the logger.&amp;lt;/param&amp;gt;
    /// &amp;lt;returns&amp;gt;The &amp;lt;see cref="ILogger"/&amp;gt;.&amp;lt;/returns&amp;gt;
    ILogger CreateLogger(string categoryName);

    /// &amp;lt;summary&amp;gt;
    /// Adds an &amp;lt;see cref="ILoggerProvider"/&amp;gt; to the logging system.
    /// &amp;lt;/summary&amp;gt;
    /// &amp;lt;param name="provider"&amp;gt;The &amp;lt;see cref="ILoggerProvider"/&amp;gt;.&amp;lt;/param&amp;gt;
    void AddProvider(ILoggerProvider provider);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This one is even simpler than &lt;code&gt;ILogger&lt;/code&gt;, with only two methods. The &lt;code&gt;AddProvider&lt;/code&gt; method is what you use to
control where log events go, but I'm not going to cover that in this post. I'll probably cover it in a future
post. For now, let's focus on &lt;code&gt;CreateLogger&lt;/code&gt; instead.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;CreateLogger&lt;/code&gt; method is called, not surprisingly, to create an &lt;code&gt;ILogger&lt;/code&gt; instance. Depending on the
logging framework you're used to using, you may be surprised at the &lt;code&gt;categoryName&lt;/code&gt; parameter it requires,
however. Some, but not all, logging frameworks allow you to create loggers that log with different
“categories” to allow you to control filtring at a very fine grained level. For instance, if you know
you have a bug in &lt;code&gt;SomeClass&lt;/code&gt; you could turn logging up to include &lt;code&gt;Debug&lt;/code&gt; level events only for the
"category" that &lt;code&gt;SomeClass&lt;/code&gt; logs to. Often these categories are based on a &lt;code&gt;Type&lt;/code&gt; name (the full name,
including the namespace). MEL makes it easy to do the same thing by providing some extension methods.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-cscript"&gt;/// &amp;lt;summary&amp;gt;
/// ILoggerFactory extension methods for common scenarios.
/// &amp;lt;/summary&amp;gt;
public static class LoggerFactoryExtensions
{
    /// &amp;lt;summary&amp;gt;
    /// Creates a new ILogger instance using the full name of the given type.
    /// &amp;lt;/summary&amp;gt;
    /// &amp;lt;typeparam name="T"&amp;gt;The type.&amp;lt;/typeparam&amp;gt;
    /// &amp;lt;param name="factory"&amp;gt;The factory.&amp;lt;/param&amp;gt;
    public static ILogger&amp;lt;T&amp;gt; CreateLogger&amp;lt;T&amp;gt;(this ILoggerFactory factory)
    {
        // ..
    }

    /// &amp;lt;summary&amp;gt;
    /// Creates a new ILogger instance using the full name of the given type.
    /// &amp;lt;/summary&amp;gt;
    /// &amp;lt;param name="factory"&amp;gt;The factory.&amp;lt;/param&amp;gt;
    /// &amp;lt;param name="type"&amp;gt;The type.&amp;lt;/param&amp;gt;
    public static ILogger CreateLogger(this ILoggerFactory factory, Type type)
    {
        // ..
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;There's a concrete &lt;code&gt;LoggerFactory&lt;/code&gt; instance that implements &lt;code&gt;ILoggerFactory&lt;/code&gt;. So, putting everything
we've learned so far together, here's a simple console application that logs a single message
to standard output.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;using Microsoft.Extensions.Logging;
using System;

namespace LoggingPlay
{
    class Program
    {
        static void Main(string[] args)
        {
            var factory = new LoggerFactory()
                .AddConsole();
            var logger = factory.CreateLogger&amp;lt;Program&amp;gt;();
            logger.LogInformation("Started at {Time}.", DateTime.Now);
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote class="blockquote"&gt;
&lt;p&gt;Note: To use this code you'll also have to include the NuGet packages for &lt;code&gt;Microsoft.Extensions.Logging&lt;/code&gt;
and &lt;code&gt;Microsoft.Extensions.Logging.Console&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Most of this should be familiar to you at this point. The &lt;code&gt;AddConsole&lt;/code&gt; method may not make any sense to
you yet. This is actually an extension method found in &lt;code&gt;Microsoft.Extensions.Logging.Console&lt;/code&gt;. it
simply creates a “provider” that writes log events to standard output and adds it by calling
&lt;code&gt;ILoggerFactory.AddProvider&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;When you run this, the following is produced.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-text"&gt;info: LoggingPlay.Program[0]
      Started at 01/01/2017 12:00:25.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The output is based on the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;“info” is the log level.&lt;/li&gt;
&lt;li&gt;“LoggingPlay.Program” is the category name, derived from the generic type parameter used in the
&lt;code&gt;CreateLogger&lt;/code&gt; call.&lt;/li&gt;
&lt;li&gt;“[0]” is the event ID (we didn't specify one when we called &lt;code&gt;LogInformation&lt;/code&gt; so it defaulted to 0).&lt;/li&gt;
&lt;li&gt;“Started at 01/01/2017 12:00:25” is the fomratted message generated from the template and parameters
we passed to &lt;code&gt;LogInformation&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Some providers allow you to configure the output format, but as far as I know the console provider does not.
Each provider will be unique and you'll have to learn how to use it on your own. I'll cover at
least the basics of some of them in the future. Remember, I'm not giving you a tutorial here,
but rather I'm exploring the API design.&lt;/p&gt;
&lt;p&gt;While you're not forced into any specific usage pattern here, typically your application should follow
a simple pattern. You'll have a single &lt;code&gt;LoggerFactory&lt;/code&gt; instance for the entire application, which
you add providers to at startup. Then, in every class that will do some logging you'll include an
&lt;code&gt;ILogger&lt;/code&gt; instance created by calling &lt;code&gt;CreateInstance&amp;lt;T&amp;gt;&lt;/code&gt;. It's a really good idea to do all of this
through Dependency Injection. We know enough now to add the &lt;code&gt;LoggerFactory&lt;/code&gt; to the DI container of
your choice and inject &lt;code&gt;ILoggerFactory&lt;/code&gt; into the classes that will create log events. This will
work, but it does seem strange and a bit of a chore to inject an &lt;code&gt;ILoggerFactory&lt;/code&gt; instead of an
&lt;code&gt;ILogger&lt;/code&gt;. Some DI containers would allow you to do some clever configuration to allow injecting
an &lt;code&gt;ILogger&lt;/code&gt; created with the Type that the logger is being injected into, but not all containers
can accomplish this. MEL's design actually considers this, which is something we'll explore
in Part III.&lt;/p&gt;


&lt;div id="disqus_thread"&gt;&lt;/div&gt;
&lt;script type="text/javascript"&gt;
    /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
    var disqus_shortname = 'digitaltapestry'; // required: replace example with your forum shortname
    var disqus_identifier = 'logging-part-II';
    var disqus_title = 'Logging - Part II';
    var disqus_url = 'http://digitaltapestry.net/posts/logging-part-II';

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
    
    (function () {
        var s = document.createElement('script'); s.async = true;
        s.type = 'text/javascript';
        s.src = '//' + disqus_shortname + '.disqus.com/count.js';
        (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
    }());
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href="http://disqus.com/?ref_noscript"&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
&lt;a href="http://disqus.com" class="dsq-brlink"&gt;comments powered by &lt;span class="logo-disqus"&gt;Disqus&lt;/span&gt;&lt;/a&gt;</content>
		<summary>&lt;p&gt;In &lt;a href="/posts/logging-part-I"&gt;Part I&lt;/a&gt; we were introduced to &lt;a href="https://github.com/aspnet/Logging"&gt;Microsoft.Extensions.Logging&lt;/a&gt;
which I amusingly abbreviate to just MEL. In particular, we explored the design of the &lt;code&gt;ILogger&lt;/code&gt; interface.
In this post we'll continue to explore MEL by looking next at the design of the &lt;code&gt;ILoggerFactory&lt;/code&gt; interface.&lt;/p&gt;</summary>
	</entry>
	<entry>
		<link href="http://digitaltapestry.net/posts/logging-part-I" />
		<link rel="enclosure" type="image" href="http://digitaltapestry.net/assets/images/banner_web.jpg" />
		<id>http://digitaltapestry.net/posts/logging-part-I</id>
		<title>Logging - Part I</title>
		<updated>2016-12-28T09:00:00Z</updated>
		<content>&lt;h1 id="logging"&gt;Logging&lt;/h1&gt;
&lt;h2 id="part-i"&gt;Part I&lt;/h2&gt;
&lt;p&gt;We've all dealt with logging in our projects before. This is a mostly known commodity for every developer.
So, why am I blogging about it? Well, I think there's something to be learned about the finer points of
logging, and there's a new kid on the block: &lt;a href="https://github.com/aspnet/Logging"&gt;Microsoft.Extensions.Logging&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Why another logging framework? Really, aren't there enough choices already? Well, I think MEL (hey, I just
coined that, and kinda like it) is a little different. See, first and foremost, MEL is a logging abstraction,
not a logging framework. It's main intent is to provide interfaces that act as a facade over any other
logging framework. Technically, any logging framework that exposes interfaces could make this claim, since
pretty much all of them provide a way to plug in “listeners”, "providers" or some other conceptual name
for a type that controls how and where to log. By creating one of these you can pretty much bridge from
one logging framework to another, and MEL isn't much different in this regard. Where MEL differs, however
is in the fact that the design was &lt;strong&gt;intended&lt;/strong&gt; to be used in this fashion. Its logging abstractions are
generic and fully intended to allow adapting to any other framework. Other projects, such as
&lt;a href="https://github.com/net-commons/common-logging"&gt;common-logging&lt;/a&gt; have attempted to do the same thing,
but I really think MEL has done the best job here. It's simple, elegant, and provides all the features
you'd want in a way that doesn't require the underlying frameworks to have to be “bent” to work with it.&lt;/p&gt;
&lt;p&gt;That's a pretty bold claim. I'm going to spend a few posts here going over MEL's design to try and back
up that claim. A caveat, though. I'm new to MEL, and not a contributor to it. MEL is also, at the moment,
underdocumented and not talked much about, so this will actually be one of the few blog posts on the
topic available at the time I post it. This means these posts are written by someone that doesn't know much more
about the subject than you probably do. Expect some mistakes to be made. Share with me in the comments
any mistakes I've made or differences of opinion you have, and I'll likely address it either with corrections
to individual posts, or with entirely new posts on the subject.&lt;/p&gt;
&lt;h3 id="ilogger"&gt;ILogger&lt;/h3&gt;
&lt;p&gt;So, I'm writing about this subject from the point of view of the design, not as a tutorial or reference.
You'll learn some things about using MEL, I hope, but it may take a bit longer to get there because of
this.&lt;/p&gt;
&lt;p&gt;Given that, the first place I'm going to start is with talking about the design of the main abstraction:
the &lt;code&gt;ILogger&lt;/code&gt; interface. Here it is, in it's full glory.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;/// &amp;lt;summary&amp;gt;
/// Represents a type used to perform logging.
/// &amp;lt;/summary&amp;gt;
/// &amp;lt;remarks&amp;gt;Aggregates most logging patterns to a single method.&amp;lt;/remarks&amp;gt;
public interface ILogger
{
    /// &amp;lt;summary&amp;gt;
    /// Writes a log entry.
    /// &amp;lt;/summary&amp;gt;
    /// &amp;lt;param name="logLevel"&amp;gt;Entry will be written on this level.&amp;lt;/param&amp;gt;
    /// &amp;lt;param name="eventId"&amp;gt;Id of the event.&amp;lt;/param&amp;gt;
    /// &amp;lt;param name="state"&amp;gt;The entry to be written. Can be also an object.&amp;lt;/param&amp;gt;
    /// &amp;lt;param name="exception"&amp;gt;The exception related to this entry.&amp;lt;/param&amp;gt;
    /// &amp;lt;param name="formatter"&amp;gt;Function to create a &amp;lt;c&amp;gt;string&amp;lt;/c&amp;gt; message of the &amp;lt;paramref name="state"/&amp;gt; and &amp;lt;paramref name="exception"/&amp;gt;.&amp;lt;/param&amp;gt;
    void Log&amp;lt;TState&amp;gt;(LogLevel logLevel, EventId eventId, TState state, Exception exception, Func&amp;lt;TState, Exception, string&amp;gt; formatter);

    /// &amp;lt;summary&amp;gt;
    /// Checks if the given &amp;lt;paramref name="logLevel"/&amp;gt; is enabled.
    /// &amp;lt;/summary&amp;gt;
    /// &amp;lt;param name="logLevel"&amp;gt;level to be checked.&amp;lt;/param&amp;gt;
    /// &amp;lt;returns&amp;gt;&amp;lt;c&amp;gt;true&amp;lt;/c&amp;gt; if enabled.&amp;lt;/returns&amp;gt;
    bool IsEnabled(LogLevel logLevel);

    /// &amp;lt;summary&amp;gt;
    /// Begins a logical operation scope.
    /// &amp;lt;/summary&amp;gt;
    /// &amp;lt;param name="state"&amp;gt;The identifier for the scope.&amp;lt;/param&amp;gt;
    /// &amp;lt;returns&amp;gt;An IDisposable that ends the logical operation scope on dispose.&amp;lt;/returns&amp;gt;
    IDisposable BeginScope&amp;lt;TState&amp;gt;(TState state);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The first thing I'd like to point out about the design here is the minimalism of it. Three little
methods, no more, no less. Many of the other abstractions and logging frameworks include a half
dozen or more methods for logging at different levels. MEL just provides a single &lt;code&gt;Log&lt;/code&gt; method.&lt;/p&gt;
&lt;p&gt;Wait, that's a good thing? That &lt;code&gt;Log&lt;/code&gt; method looks a little complicated to call, doesn't it?&lt;/p&gt;
&lt;p&gt;Actually, yes, that method does look a little complicated, but I still contend this makes for an
elegant design. If you're trying to adapt this abstraction to some other framework you have far
less work to do with a single &lt;code&gt;Log&lt;/code&gt; method than you'd have with a half dozen of them. Most
other frameworks actually include a similar method, and all of the others are basically just
simpler overloads that should delegate to this one. By keeping the abstraction to this singular
method it's actually easier to work with when writing an adapter.&lt;/p&gt;
&lt;p&gt;OK, but isn't it harder to use in regular logging code, then? Actually, no, it's not. See, there
&lt;strong&gt;are&lt;/strong&gt; overloads provided, they are just provided through extension methods rather than polluting
the interface. To make you feel better, here's the extension methods.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;/// &amp;lt;summary&amp;gt;
/// ILogger extension methods for common scenarios.
/// &amp;lt;/summary&amp;gt;
public static class LoggerExtensions
{
    /// &amp;lt;summary&amp;gt;
    /// Formats and writes a debug log message.
    /// &amp;lt;/summary&amp;gt;
    /// &amp;lt;param name="logger"&amp;gt;The &amp;lt;see cref="ILogger"/&amp;gt; to write to.&amp;lt;/param&amp;gt;
    /// &amp;lt;param name="eventId"&amp;gt;The event id associated with the log.&amp;lt;/param&amp;gt;
    /// &amp;lt;param name="exception"&amp;gt;The exception to log.&amp;lt;/param&amp;gt;
    /// &amp;lt;param name="message"&amp;gt;Format string of the log message.&amp;lt;/param&amp;gt;
    /// &amp;lt;param name="args"&amp;gt;An object array that contains zero or more objects to format.&amp;lt;/param&amp;gt;
    public static void LogDebug(this ILogger logger, EventId eventId, Exception exception, string message, params object[] args)
    {
        // ...
    }

    /// &amp;lt;summary&amp;gt;
    /// Formats and writes a debug log message.
    /// &amp;lt;/summary&amp;gt;
    /// &amp;lt;param name="logger"&amp;gt;The &amp;lt;see cref="ILogger"/&amp;gt; to write to.&amp;lt;/param&amp;gt;
    /// &amp;lt;param name="eventId"&amp;gt;The event id associated with the log.&amp;lt;/param&amp;gt;
    /// &amp;lt;param name="message"&amp;gt;Format string of the log message.&amp;lt;/param&amp;gt;
    /// &amp;lt;param name="args"&amp;gt;An object array that contains zero or more objects to format.&amp;lt;/param&amp;gt;
    public static void LogDebug(this ILogger logger, EventId eventId, string message, params object[] args)
    {
        // ...
    }

    /// &amp;lt;summary&amp;gt;
    /// Formats and writes a debug log message.
    /// &amp;lt;/summary&amp;gt;
    /// &amp;lt;param name="logger"&amp;gt;The &amp;lt;see cref="ILogger"/&amp;gt; to write to.&amp;lt;/param&amp;gt;
    /// &amp;lt;param name="message"&amp;gt;Format string of the log message.&amp;lt;/param&amp;gt;
    /// &amp;lt;param name="args"&amp;gt;An object array that contains zero or more objects to format.&amp;lt;/param&amp;gt;
    public static void LogDebug(this ILogger logger, string message, params object[] args)
    {
        // ...
    }

    /// &amp;lt;summary&amp;gt;
    /// Formats and writes a trace log message.
    /// &amp;lt;/summary&amp;gt;
    /// &amp;lt;param name="logger"&amp;gt;The &amp;lt;see cref="ILogger"/&amp;gt; to write to.&amp;lt;/param&amp;gt;
    /// &amp;lt;param name="eventId"&amp;gt;The event id associated with the log.&amp;lt;/param&amp;gt;
    /// &amp;lt;param name="exception"&amp;gt;The exception to log.&amp;lt;/param&amp;gt;
    /// &amp;lt;param name="message"&amp;gt;Format string of the log message.&amp;lt;/param&amp;gt;
    /// &amp;lt;param name="args"&amp;gt;An object array that contains zero or more objects to format.&amp;lt;/param&amp;gt;
    public static void LogTrace(this ILogger logger, EventId eventId, Exception exception, string message, params object[] args)
    {
        // ...
    }

    /// &amp;lt;summary&amp;gt;
    /// Formats and writes a trace log message.
    /// &amp;lt;/summary&amp;gt;
    /// &amp;lt;param name="logger"&amp;gt;The &amp;lt;see cref="ILogger"/&amp;gt; to write to.&amp;lt;/param&amp;gt;
    /// &amp;lt;param name="eventId"&amp;gt;The event id associated with the log.&amp;lt;/param&amp;gt;
    /// &amp;lt;param name="message"&amp;gt;Format string of the log message.&amp;lt;/param&amp;gt;
    /// &amp;lt;param name="args"&amp;gt;An object array that contains zero or more objects to format.&amp;lt;/param&amp;gt;
    public static void LogTrace(this ILogger logger, EventId eventId, string message, params object[] args)
    {
        // ...
    }

    /// &amp;lt;summary&amp;gt;
    /// Formats and writes a trace log message.
    /// &amp;lt;/summary&amp;gt;
    /// &amp;lt;param name="logger"&amp;gt;The &amp;lt;see cref="ILogger"/&amp;gt; to write to.&amp;lt;/param&amp;gt;
    /// &amp;lt;param name="message"&amp;gt;Format string of the log message.&amp;lt;/param&amp;gt;
    /// &amp;lt;param name="args"&amp;gt;An object array that contains zero or more objects to format.&amp;lt;/param&amp;gt;
    public static void LogTrace(this ILogger logger, string message, params object[] args)
    {
        // ...
    }

    /// &amp;lt;summary&amp;gt;
    /// Formats and writes an informational log message.
    /// &amp;lt;/summary&amp;gt;
    /// &amp;lt;param name="logger"&amp;gt;The &amp;lt;see cref="ILogger"/&amp;gt; to write to.&amp;lt;/param&amp;gt;
    /// &amp;lt;param name="eventId"&amp;gt;The event id associated with the log.&amp;lt;/param&amp;gt;
    /// &amp;lt;param name="exception"&amp;gt;The exception to log.&amp;lt;/param&amp;gt;
    /// &amp;lt;param name="message"&amp;gt;Format string of the log message.&amp;lt;/param&amp;gt;
    /// &amp;lt;param name="args"&amp;gt;An object array that contains zero or more objects to format.&amp;lt;/param&amp;gt;
    public static void LogInformation(this ILogger logger, EventId eventId, Exception exception, string message, params object[] args)
    {
        // ...
    }

    /// &amp;lt;summary&amp;gt;
    /// Formats and writes an informational log message.
    /// &amp;lt;/summary&amp;gt;
    /// &amp;lt;param name="logger"&amp;gt;The &amp;lt;see cref="ILogger"/&amp;gt; to write to.&amp;lt;/param&amp;gt;
    /// &amp;lt;param name="eventId"&amp;gt;The event id associated with the log.&amp;lt;/param&amp;gt;
    /// &amp;lt;param name="message"&amp;gt;Format string of the log message.&amp;lt;/param&amp;gt;
    /// &amp;lt;param name="args"&amp;gt;An object array that contains zero or more objects to format.&amp;lt;/param&amp;gt;
    public static void LogInformation(this ILogger logger, EventId eventId, string message, params object[] args)
    {
        // ...
    }

    /// &amp;lt;summary&amp;gt;
    /// Formats and writes an informational log message.
    /// &amp;lt;/summary&amp;gt;
    /// &amp;lt;param name="logger"&amp;gt;The &amp;lt;see cref="ILogger"/&amp;gt; to write to.&amp;lt;/param&amp;gt;
    /// &amp;lt;param name="message"&amp;gt;Format string of the log message.&amp;lt;/param&amp;gt;
    /// &amp;lt;param name="args"&amp;gt;An object array that contains zero or more objects to format.&amp;lt;/param&amp;gt;
    public static void LogInformation(this ILogger logger, string message, params object[] args)
    {
        // ...
    }

    /// &amp;lt;summary&amp;gt;
    /// Formats and writes a warning log message.
    /// &amp;lt;/summary&amp;gt;
    /// &amp;lt;param name="logger"&amp;gt;The &amp;lt;see cref="ILogger"/&amp;gt; to write to.&amp;lt;/param&amp;gt;
    /// &amp;lt;param name="eventId"&amp;gt;The event id associated with the log.&amp;lt;/param&amp;gt;
    /// &amp;lt;param name="exception"&amp;gt;The exception to log.&amp;lt;/param&amp;gt;
    /// &amp;lt;param name="message"&amp;gt;Format string of the log message.&amp;lt;/param&amp;gt;
    /// &amp;lt;param name="args"&amp;gt;An object array that contains zero or more objects to format.&amp;lt;/param&amp;gt;
    public static void LogWarning(this ILogger logger, EventId eventId, Exception exception, string message, params object[] args)
    {
        // ...
    }

    /// &amp;lt;summary&amp;gt;
    /// Formats and writes a warning log message.
    /// &amp;lt;/summary&amp;gt;
    /// &amp;lt;param name="logger"&amp;gt;The &amp;lt;see cref="ILogger"/&amp;gt; to write to.&amp;lt;/param&amp;gt;
    /// &amp;lt;param name="eventId"&amp;gt;The event id associated with the log.&amp;lt;/param&amp;gt;
    /// &amp;lt;param name="message"&amp;gt;Format string of the log message.&amp;lt;/param&amp;gt;
    /// &amp;lt;param name="args"&amp;gt;An object array that contains zero or more objects to format.&amp;lt;/param&amp;gt;
    public static void LogWarning(this ILogger logger, EventId eventId, string message, params object[] args)
    {
        // ...
    }

    /// &amp;lt;summary&amp;gt;
    /// Formats and writes a warning log message.
    /// &amp;lt;/summary&amp;gt;
    /// &amp;lt;param name="logger"&amp;gt;The &amp;lt;see cref="ILogger"/&amp;gt; to write to.&amp;lt;/param&amp;gt;
    /// &amp;lt;param name="message"&amp;gt;Format string of the log message.&amp;lt;/param&amp;gt;
    /// &amp;lt;param name="args"&amp;gt;An object array that contains zero or more objects to format.&amp;lt;/param&amp;gt;
    public static void LogWarning(this ILogger logger, string message, params object[] args)
    {
        // ...
    }

    /// &amp;lt;summary&amp;gt;
    /// Formats and writes an error log message.
    /// &amp;lt;/summary&amp;gt;
    /// &amp;lt;param name="logger"&amp;gt;The &amp;lt;see cref="ILogger"/&amp;gt; to write to.&amp;lt;/param&amp;gt;
    /// &amp;lt;param name="eventId"&amp;gt;The event id associated with the log.&amp;lt;/param&amp;gt;
    /// &amp;lt;param name="exception"&amp;gt;The exception to log.&amp;lt;/param&amp;gt;
    /// &amp;lt;param name="message"&amp;gt;Format string of the log message.&amp;lt;/param&amp;gt;
    /// &amp;lt;param name="args"&amp;gt;An object array that contains zero or more objects to format.&amp;lt;/param&amp;gt;
    public static void LogError(this ILogger logger, EventId eventId, Exception exception, string message, params object[] args)
    {
        // ...
    }

    /// &amp;lt;summary&amp;gt;
    /// Formats and writes an error log message.
    /// &amp;lt;/summary&amp;gt;
    /// &amp;lt;param name="logger"&amp;gt;The &amp;lt;see cref="ILogger"/&amp;gt; to write to.&amp;lt;/param&amp;gt;
    /// &amp;lt;param name="eventId"&amp;gt;The event id associated with the log.&amp;lt;/param&amp;gt;
    /// &amp;lt;param name="message"&amp;gt;Format string of the log message.&amp;lt;/param&amp;gt;
    /// &amp;lt;param name="args"&amp;gt;An object array that contains zero or more objects to format.&amp;lt;/param&amp;gt;
    public static void LogError(this ILogger logger, EventId eventId, string message, params object[] args)
    {
        // ...
    }

    /// &amp;lt;summary&amp;gt;
    /// Formats and writes an error log message.
    /// &amp;lt;/summary&amp;gt;
    /// &amp;lt;param name="logger"&amp;gt;The &amp;lt;see cref="ILogger"/&amp;gt; to write to.&amp;lt;/param&amp;gt;
    /// &amp;lt;param name="message"&amp;gt;Format string of the log message.&amp;lt;/param&amp;gt;
    /// &amp;lt;param name="args"&amp;gt;An object array that contains zero or more objects to format.&amp;lt;/param&amp;gt;
    public static void LogError(this ILogger logger, string message, params object[] args)
    {
        // ...
    }

    /// &amp;lt;summary&amp;gt;
    /// Formats and writes a critical log message.
    /// &amp;lt;/summary&amp;gt;
    /// &amp;lt;param name="logger"&amp;gt;The &amp;lt;see cref="ILogger"/&amp;gt; to write to.&amp;lt;/param&amp;gt;
    /// &amp;lt;param name="eventId"&amp;gt;The event id associated with the log.&amp;lt;/param&amp;gt;
    /// &amp;lt;param name="exception"&amp;gt;The exception to log.&amp;lt;/param&amp;gt;
    /// &amp;lt;param name="message"&amp;gt;Format string of the log message.&amp;lt;/param&amp;gt;
    /// &amp;lt;param name="args"&amp;gt;An object array that contains zero or more objects to format.&amp;lt;/param&amp;gt;
    public static void LogCritical(this ILogger logger, EventId eventId, Exception exception, string message, params object[] args)
    {
        // ...
    }

    /// &amp;lt;summary&amp;gt;
    /// Formats and writes a critical log message.
    /// &amp;lt;/summary&amp;gt;
    /// &amp;lt;param name="logger"&amp;gt;The &amp;lt;see cref="ILogger"/&amp;gt; to write to.&amp;lt;/param&amp;gt;
    /// &amp;lt;param name="eventId"&amp;gt;The event id associated with the log.&amp;lt;/param&amp;gt;
    /// &amp;lt;param name="message"&amp;gt;Format string of the log message.&amp;lt;/param&amp;gt;
    /// &amp;lt;param name="args"&amp;gt;An object array that contains zero or more objects to format.&amp;lt;/param&amp;gt;
    public static void LogCritical(this ILogger logger, EventId eventId, string message, params object[] args)
    {
        // ...
    }

    /// &amp;lt;summary&amp;gt;
    /// Formats and writes a critical log message.
    /// &amp;lt;/summary&amp;gt;
    /// &amp;lt;param name="logger"&amp;gt;The &amp;lt;see cref="ILogger"/&amp;gt; to write to.&amp;lt;/param&amp;gt;
    /// &amp;lt;param name="message"&amp;gt;Format string of the log message.&amp;lt;/param&amp;gt;
    /// &amp;lt;param name="args"&amp;gt;An object array that contains zero or more objects to format.&amp;lt;/param&amp;gt;
    public static void LogCritical(this ILogger logger, string message, params object[] args)
    {
        // ...
    }

    /// &amp;lt;summary&amp;gt;
    /// Formats the message and creates a scope.
    /// &amp;lt;/summary&amp;gt;
    /// &amp;lt;param name="logger"&amp;gt;The &amp;lt;see cref="ILogger"/&amp;gt; to create the scope in.&amp;lt;/param&amp;gt;
    /// &amp;lt;param name="messageFormat"&amp;gt;Format string of the scope message.&amp;lt;/param&amp;gt;
    /// &amp;lt;param name="args"&amp;gt;An object array that contains zero or more objects to format.&amp;lt;/param&amp;gt;
    /// &amp;lt;returns&amp;gt;A disposable scope object. Can be null.&amp;lt;/returns&amp;gt;
    public static IDisposable BeginScope(
        this ILogger logger,
        string messageFormat,
        params object[] args)
    {
        // ...
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So, all the overloads you'd expect are there, and as a consumer you can write code that looks very
familiar.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;logger.LogInformation("Something happened.");
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can, but I would not recommend writing code like that. I think there's a better way to use MEL,
which we'll slowly cover throughout this series. Bear with me. 😃&lt;/p&gt;
&lt;p&gt;Let's pick apart this &lt;code&gt;Log&lt;/code&gt; method a bit, to get a deeper understanding of MEL.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;void Log&amp;lt;TState&amp;gt;(LogLevel logLevel, EventId eventId, TState state, Exception exception, Func&amp;lt;TState, Exception, string&amp;gt; formatter);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That first parameter should be familiar. All logging frameworks have the concept of a logging level,
and MEL is no different. In fact, the levels it provides are pretty much the same levels every framework
uses, though maybe the names and values differ a little.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;/// &amp;lt;summary&amp;gt;
/// Defines logging severity levels.
/// &amp;lt;/summary&amp;gt;
public enum LogLevel
{
    /// &amp;lt;summary&amp;gt;
    /// Logs that contain the most detailed messages. These messages may contain sensitive application data.
    /// These messages are disabled by default and should never be enabled in a production environment.
    /// &amp;lt;/summary&amp;gt;
    Trace = 0,

    /// &amp;lt;summary&amp;gt;
    /// Logs that are used for interactive investigation during development.  These logs should primarily contain
    /// information useful for debugging and have no long-term value.
    /// &amp;lt;/summary&amp;gt;
    Debug = 1,

    /// &amp;lt;summary&amp;gt;
    /// Logs that track the general flow of the application. These logs should have long-term value.
    /// &amp;lt;/summary&amp;gt;
    Information = 2,

    /// &amp;lt;summary&amp;gt;
    /// Logs that highlight an abnormal or unexpected event in the application flow, but do not otherwise cause the
    /// application execution to stop.
    /// &amp;lt;/summary&amp;gt;
    Warning = 3,

    /// &amp;lt;summary&amp;gt;
    /// Logs that highlight when the current flow of execution is stopped due to a failure. These should indicate a
    /// failure in the current activity, not an application-wide failure.
    /// &amp;lt;/summary&amp;gt;
    Error = 4,

    /// &amp;lt;summary&amp;gt;
    /// Logs that describe an unrecoverable application or system crash, or a catastrophic failure that requires
    /// immediate attention.
    /// &amp;lt;/summary&amp;gt;
    Critical = 5,

    /// &amp;lt;summary&amp;gt;
    /// Not used for writing log messages. Specifies that a logging category should not write any messages.
    /// &amp;lt;/summary&amp;gt;
    None = 6,
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That last value, &lt;code&gt;None&lt;/code&gt;, should stick out at you a bit. This is one of few places where I think MEL's design
is deficient. There's two problems I see here. One, they've chosen to use a single enumeration where I think
two should have been. The enumeration you use when logging really should not be the same enumeration you use
to configure how to filter. As the comment says, &lt;code&gt;None&lt;/code&gt; makes perfect sense when filtering, but it makes
no sense at all when logging. By combining the concepts into a single type we lose some compiler enforcement,
and a developer &lt;strong&gt;could&lt;/strong&gt; use &lt;code&gt;None&lt;/code&gt; while logging, as much as that makes no sense to do. The bigger issue here,
though, is actually the value assigned. &lt;code&gt;None&lt;/code&gt; has an integral value of 6, while the Framework design
Guidelines tell you that such “no value” enumeration tags should always have a value of 0. Worse, 0
is assigned as the value for the tag &lt;code&gt;Trace&lt;/code&gt;. This means &lt;code&gt;default(LogLevel)&lt;/code&gt; equals &lt;code&gt;Trace&lt;/code&gt;, not &lt;code&gt;None&lt;/code&gt;
as one would expect. Oh well, no code is perfect.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;void Log&amp;lt;TState&amp;gt;(LogLevel logLevel, EventId eventId, TState state, Exception exception, Func&amp;lt;TState, Exception, string&amp;gt; formatter);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The next parameter is an &lt;code&gt;EventId&lt;/code&gt;. Most logging frameworks have this concept as well… an integer identifier
for the log event. Many frameworks don't actually use this identifier in any meaningful way, so some
may not quite understand why this concept is so important. It's all about filtering, reporting and
parsing the logs. If a particular log event has a unique identifier it's easy to locate all such
events in the log when trying to diagnose issues or find trends. Some log sources, such as the Event
Viewer in Windows actually require an ID, and unfortunately many logging frameworks just use a generic
ID of 0 when you don't provide one and they log to such sources. We'll come back to this topic in later
parts of this series, but first I'd like to point out something a bit surprising.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;public struct EventId
{
    private int _id;
    private string _name;

    public EventId(int id, string name = null)
    {
        _id = id;
        _name = name;
    }

    public int Id
    {
        get
        {
            return _id;
        }
    }

    public string Name
    {
        get
        {
            return _name;
        }
    }

    public static implicit operator EventId(int i)
    {
        return new EventId(i);
    }

    public override string ToString()
    {
        if (_name != null)
        {
            return _name;
        }
        else
        {
            return _id.ToString();
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So, EventId isn't just an integer. It optionally also contains a &lt;code&gt;Name&lt;/code&gt;. I'll admit, it's not entirely
clear to me why this is important. I will point out that with the implicit operator you &lt;em&gt;can&lt;/em&gt; just
pass an integer where an &lt;code&gt;EventId&lt;/code&gt; is expected and it will just work, meaning you can treat this parameter
exactly the same way you're probably used to with other logging frameworks. If you know why you'd
want to provide a richer identifier with both a numeric value and a name, please let me know. This
is one design area I'd like to explore more.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;void Log&amp;lt;TState&amp;gt;(LogLevel logLevel, EventId eventId, TState state, Exception exception, Func&amp;lt;TState, Exception, string&amp;gt; formatter);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next, we have a &lt;code&gt;TState&lt;/code&gt; parameter. Many logging frameworks just log messages. Luckily, that's not
the case for MEL. MEL logs data, not messages. This is a concept known as “semantic logging”, and
it makes the logging richer. By logging data instead of messages it makes your logs consumable by
more than just a human. Rich data mining, filtering and reporting becomes available to you, making
your logs useful for things other than manually diagnosing issues. For instance, it would be trivial
to determine which features your users actually use the most if you could query the logs for such
information. I may touch on this more deeply if I get into creating a provider for MEL, but you should
understand that typical usage of MEL doesn't directly use this TState. Rather, the extension methods
use a string "template" and a params array to create an internal &lt;code&gt;FormattedLogValues&lt;/code&gt; to use a the
&lt;code&gt;TState&lt;/code&gt;. An example of this would be the following:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;logger.Log("Operation {Operation} started at time {Time}", "SomeOperation", DateTime.Now);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The first string represents a “template”, not an actual log message. This might appear to be an
interpolated string based on what looks like "holes" (&lt;code&gt;{Operation}&lt;/code&gt; and &lt;code&gt;{Time}&lt;/code&gt;), but note the
lack of a ‘$’ prefix. This is just a string, not an interpolated string. The "holes" are named
placeholders where the params array members are filled in, in the order provided. So, in this
example the &lt;code&gt;{Operation}&lt;/code&gt; placeholder will be filled in with “SomeOperation”. Please note
that MEL doesn't do this formatting. Within MEL this remains a template and is not transformed
into a message. This means the rich data information is retained, and for example a log provider
could translate this into rich JSON.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-JavaScript"&gt;{
    "Message": "Operation SomeOperation started at 10:45 am",
    "Operation": "SomeOperation",
    "Time": "2017-01-01T10:45:00Z"
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It's actually pretty important that MEL doesn't just simply use messages here. Semantic logging
is a very important concept that should not be lost when abstracting away logging. You can easily
transform rich semantic logging events into simple messages for log sources that work that way,
but you cannot go in the other direction. Given the benefits of semantic logging, I'd highly
suggest when using MEL that you treat your logging as such, even if your just going to log
to a traditional flat log file with no semantic logging features. By doing so you retain the
greatest flexibility.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;void Log&amp;lt;TState&amp;gt;(LogLevel logLevel, EventId eventId, TState state, Exception exception, Func&amp;lt;TState, Exception, string&amp;gt; formatter);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next up is an &lt;code&gt;Exception&lt;/code&gt; parameter. This is pretty straightforward. The majority of log events
are typically generated in response to an exception being thrown, so including the exception
in the log event is natural. This information &lt;em&gt;could&lt;/em&gt; just be included in the &lt;code&gt;TState&lt;/code&gt; parameter.
I can only assume that MEL doesn't do that in order to make it easier for providers to deal with
the exception directly. If it were “buried” inside the &lt;code&gt;TState&lt;/code&gt; it would be nearly impossible
to deal with the exception programatically.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;void Log&amp;lt;TState&amp;gt;(LogLevel logLevel, EventId eventId, TState state, Exception exception, Func&amp;lt;TState, Exception, string&amp;gt; formatter);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finally, we have a &lt;code&gt;Func&amp;lt;TState, Exception, string&amp;gt;&lt;/code&gt; parameter that provides a way to format
the event into a more traditional log message. This design might make for an interesting extension
space for advanced usage, but most people that use MEL will never touch this or the &lt;code&gt;TState&lt;/code&gt;
parameter directly, instead using the extension overloads that treat everything as a “template +
data” concept.&lt;/p&gt;
&lt;p&gt;This has been a very lengthy post, and we haven't really learned much about how to use MEL yet. I
warned you this wasn't a tutorial seriese. 😃 In &lt;a href="/posts/logging-part-II"&gt;Part II&lt;/a&gt; I'll look at
the design of &lt;code&gt;ILoggerFactory&lt;/code&gt; which gets us a little closer into how to use MEL.&lt;/p&gt;


&lt;div id="disqus_thread"&gt;&lt;/div&gt;
&lt;script type="text/javascript"&gt;
    /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
    var disqus_shortname = 'digitaltapestry'; // required: replace example with your forum shortname
    var disqus_identifier = 'logging-part-I';
    var disqus_title = 'Logging - Part I';
    var disqus_url = 'http://digitaltapestry.net/posts/logging-part-I';

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
    
    (function () {
        var s = document.createElement('script'); s.async = true;
        s.type = 'text/javascript';
        s.src = '//' + disqus_shortname + '.disqus.com/count.js';
        (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
    }());
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href="http://disqus.com/?ref_noscript"&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
&lt;a href="http://disqus.com" class="dsq-brlink"&gt;comments powered by &lt;span class="logo-disqus"&gt;Disqus&lt;/span&gt;&lt;/a&gt;</content>
		<summary>&lt;p&gt;We've all dealt with logging in our projects before. This is a mostly known commodity for every developer.
So, why am I blogging about it? Well, I think there's something to be learned about the finer points of
logging, and there's a new kid on the block: &lt;a href="https://github.com/aspnet/Logging"&gt;Microsoft.Extensions.Logging&lt;/a&gt;.&lt;/p&gt;</summary>
	</entry>
	<entry>
		<link href="http://digitaltapestry.net/posts/welcome-back" />
		<link rel="enclosure" type="image" href="http://digitaltapestry.net/assets/images/banner_web.jpg" />
		<id>http://digitaltapestry.net/posts/welcome-back</id>
		<title>Welcome Back</title>
		<updated>2016-12-26T00:00:00Z</updated>
		<content>&lt;p&gt;Hi again. Or hi for the first time if you're new.&lt;/p&gt;
&lt;p&gt;My old Digital Tapestry blog died. I was using &lt;a href="http://www.orchardproject.net/"&gt;Orchard&lt;/a&gt; which is a fine .NET based CMS and hosting
on a provider that I paid for by the year. I was happy with that for some time. Then, I screwed up. I got busy, and failed to
maintain everything. Orchard development kept on going, while my little site sat dormant. When I finally got the time to get
back to it, I screwed something up trying to update the codebase. The site mostly still worked, but certain key things, like
the ability to export the content, no longer worked. Still being busy, I figured I'd fix that in the future and posted one or
two more articles and went dark again. Way too much time passed and the bill for my provider came due. Honestly, I was posting
so infrequently at this point that I found it hard to justify the cost, so I figured I'd just migrate off to something less
expensive. Well, remember I said I'd screwed up export? Long story short, I screwed up and lost the entire site. Some of it
is in the Internet Archive, so I may recreate some of the better articles manually in the future, but mostly, it's all
gone. My bad.&lt;/p&gt;
&lt;p&gt;Fast forward. I've had some life changes, including a new job. It's time to start blogging again. This time I decided I'd
go with something a bit “safer” and a lot less expensive (as in, free). I'm using &lt;a href="https://pages.github.com/"&gt;GitHub Pages&lt;/a&gt;
for hosting. Normally you'd use Jekyll there, but honestly, Jekyll on Windows isn't great and the restiction on using
plugins on Pages combined to make me consider something else. As a .NET developer, a .NET based static site generator
sounded like the way to go. There's a few out there, but I settled on &lt;a href="http://wyam.io"&gt;Wyam&lt;/a&gt;. The author, Dave Glick,
has been super awesome on Gitter, helping me to get over a few misunderstandings and fixing a few bugs I found in
extremely short order. I'm confident I've chosen the right tool.&lt;/p&gt;
&lt;p&gt;Please bear with me for a while as I get this site up and running proper. Right now it's entirely based on the built-in
Wyam Blog recipe and CleanBlog theme. I'll customize it slowly over time. Of particular note is that currently there's
no comments. I'll add Disqus comments as soon as I can, but time is limited still, so it may take a few days or more.&lt;/p&gt;
&lt;p&gt;As before, I plan to mostly blog about .NET development topics. I will also blog a bit about this site and using
Wyam. I'm working on a tutorial to make it a little easier of others to get up and going with Wyam on GitHub Pages,
and as I make modifications here I'll likely blog about them as well.&lt;/p&gt;
&lt;p&gt;Here's to what I hope is a bright rebirth of this blog.&lt;/p&gt;


&lt;div id="disqus_thread"&gt;&lt;/div&gt;
&lt;script type="text/javascript"&gt;
    /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
    var disqus_shortname = 'digitaltapestry'; // required: replace example with your forum shortname
    var disqus_identifier = 'welcome-back';
    var disqus_title = 'Welcome Back';
    var disqus_url = 'http://digitaltapestry.net/posts/welcome-back';

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
    
    (function () {
        var s = document.createElement('script'); s.async = true;
        s.type = 'text/javascript';
        s.src = '//' + disqus_shortname + '.disqus.com/count.js';
        (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
    }());
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href="http://disqus.com/?ref_noscript"&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
&lt;a href="http://disqus.com" class="dsq-brlink"&gt;comments powered by &lt;span class="logo-disqus"&gt;Disqus&lt;/span&gt;&lt;/a&gt;</content>
		<summary>&lt;p&gt;Hi again. Or hi for the first time if you're new.&lt;/p&gt;</summary>
	</entry>
</feed>